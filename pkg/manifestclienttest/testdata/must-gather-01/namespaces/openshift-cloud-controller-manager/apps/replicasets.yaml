---
apiVersion: apps/v1
items:
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      operator.openshift.io/generation: "1"
      operator.openshift.io/spec-hash: 72b3f1704b34c86f13d326d16b7e10af27d2be5a614cde9da5c5d9d8141a8986
    creationTimestamp: "2023-12-06T09:19:21Z"
    generation: 1
    labels:
      infrastructure.openshift.io/cloud-controller-manager: AWS
      k8s-app: aws-cloud-controller-manager
      pod-template-hash: 665d645f97
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:operator.openshift.io/generation: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:infrastructure.openshift.io/cloud-controller-manager: {}
            f:k8s-app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1199daf5-b901-4a51-a0c9-19cc94669649"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:operator.openshift.io/config-hash: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:infrastructure.openshift.io/cloud-controller-manager: {}
                f:k8s-app: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"cloud-controller-manager"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":10258,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/kubernetes"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"host-etc-kube"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"trusted-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:19:21Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2023-12-06T09:19:36Z"
    name: aws-cloud-controller-manager-665d645f97
    namespace: openshift-cloud-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: aws-cloud-controller-manager
      uid: 1199daf5-b901-4a51-a0c9-19cc94669649
    resourceVersion: "3098"
    uid: d7ad9080-c596-4c3a-b4b6-8ece086e6bc1
  spec:
    replicas: 2
    selector:
      matchLabels:
        infrastructure.openshift.io/cloud-controller-manager: AWS
        k8s-app: aws-cloud-controller-manager
        pod-template-hash: 665d645f97
    template:
      metadata:
        annotations:
          operator.openshift.io/config-hash: ed6ccbdd7798e3fd0d709ecfd642fe4fa6deacee78f29c3e2f77704438433500
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          infrastructure.openshift.io/cloud-controller-manager: AWS
          k8s-app: aws-cloud-controller-manager
          pod-template-hash: 665d645f97
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  infrastructure.openshift.io/cloud-controller-manager: AWS
                  k8s-app: aws-cloud-controller-manager
              topologyKey: kubernetes.io/hostname
        containers:
        - command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            set -o allexport
            if [[ -f /etc/kubernetes/apiserver-url.env ]]; then
              source /etc/kubernetes/apiserver-url.env
            fi
            exec /bin/aws-cloud-controller-manager \
            --cloud-provider=aws \
            --use-service-account-credentials=true \
            --configure-cloud-routes=false \
            --leader-elect=true \
            --leader-elect-lease-duration=137s \
            --leader-elect-renew-deadline=107s \
            --leader-elect-retry-period=26s \
            --leader-elect-resource-namespace=openshift-cloud-controller-manager \
            -v=2
          image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ac236c6adc5f4ae69b1860ccba45f8d0efabd9efda8b3a63e0376003f2aea407
          imagePullPolicy: IfNotPresent
          name: cloud-controller-manager
          ports:
          - containerPort: 10258
            name: https
            protocol: TCP
          resources:
            requests:
              cpu: 200m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/kubernetes
            name: host-etc-kube
            readOnly: true
          - mountPath: /etc/pki/ca-trust/extracted/pem
            name: trusted-ca
            readOnly: true
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: cloud-controller-manager
        serviceAccountName: cloud-controller-manager
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        - effect: NoSchedule
          key: node.cloudprovider.kubernetes.io/uninitialized
          operator: Exists
        - effect: NoSchedule
          key: node.kubernetes.io/not-ready
          operator: Exists
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: ccm-trusted-ca
          name: trusted-ca
        - hostPath:
            path: /etc/kubernetes
            type: Directory
          name: host-etc-kube
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
kind: ReplicaSetList
metadata:
  resourceVersion: "47641"
