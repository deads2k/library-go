---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      configmaps/client-ca: "9362"
      configmaps/config: "31149"
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.83/23"],"mac_address":"0a:58:0a:81:00:53","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.83/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.83"
            ],
            "mac": "0a:58:0a:81:00:53",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      openshiftcontrollermanagers.operator.openshift.io/cluster: "3"
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-12-06T09:39:03Z"
    generateName: route-controller-manager-7b5fc4f9bc-
    labels:
      app: route-controller-manager
      openshift-route-controller-manager-anti-affinity: "true"
      pod-template-hash: 7b5fc4f9bc
      route-controller-manager: "true"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:configmaps/client-ca: {}
            f:configmaps/config: {}
            f:openshiftcontrollermanagers.operator.openshift.io/cluster: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:openshift-route-controller-manager-anti-affinity: {}
            f:pod-template-hash: {}
            f:route-controller-manager: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"144eb3cf-3263-4b19-86a7-f9f3e3a825cf"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"route-controller-manager"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/configmaps/client-ca"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/serving-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"serving-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:39:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2023-12-06T09:39:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-21-63
      operation: Update
      subresource: status
      time: "2023-12-06T09:39:04Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:39:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.83"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:39:07Z"
    name: route-controller-manager-7b5fc4f9bc-2qd2w
    namespace: openshift-route-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: route-controller-manager-7b5fc4f9bc
      uid: 144eb3cf-3263-4b19-86a7-f9f3e3a825cf
    resourceVersion: "32062"
    uid: 2369042b-437b-45a7-94de-747515e0862b
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app: route-controller-manager
              openshift-route-controller-manager-anti-affinity: "true"
              route-controller-manager: "true"
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --config=/var/run/configmaps/config/config.yaml
      - -v=2
      command:
      - route-controller-manager
      - start
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:2c1d5ff409fee135bb000f8214940851131daca4f019ea01dc92b1c313c7a5a5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: route-controller-manager
      ports:
      - containerPort: 8443
        protocol: TCP
      readinessProbe:
        failureThreshold: 10
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000570000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/configmaps/config
        name: config
      - mountPath: /var/run/configmaps/client-ca
        name: client-ca
      - mountPath: /var/run/secrets/serving-cert
        name: serving-cert
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h4wmp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: route-controller-manager-sa-dockercfg-lmqqb
    nodeName: ip-10-0-21-63.us-west-1.compute.internal
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000570000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c24,c9
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: route-controller-manager-sa
    serviceAccountName: route-controller-manager-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 120
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: config
      name: config
    - configMap:
        defaultMode: 420
        name: client-ca
      name: client-ca
    - name: serving-cert
      secret:
        defaultMode: 420
        secretName: serving-cert
    - name: kube-api-access-h4wmp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:39:04Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:39:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:39:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:39:04Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f64369ff574fa57809eb00f1cc06dcb57240681de20f60795366a10197b978be
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:2c1d5ff409fee135bb000f8214940851131daca4f019ea01dc92b1c313c7a5a5
      imageID: 5e6aa7621ba790344d526f5e9bfc79b55c0ebe02176908ec4761896c744701c8
      lastState: {}
      name: route-controller-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:39:05Z"
    hostIP: 10.0.21.63
    phase: Running
    podIP: 10.129.0.83
    podIPs:
    - ip: 10.129.0.83
    qosClass: Burstable
    startTime: "2023-12-06T09:39:04Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      configmaps/client-ca: "9362"
      configmaps/config: "31149"
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.44/23"],"mac_address":"0a:58:0a:80:00:2c","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.44/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.44"
            ],
            "mac": "0a:58:0a:80:00:2c",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      openshiftcontrollermanagers.operator.openshift.io/cluster: "3"
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-12-06T09:38:35Z"
    generateName: route-controller-manager-7b5fc4f9bc-
    labels:
      app: route-controller-manager
      openshift-route-controller-manager-anti-affinity: "true"
      pod-template-hash: 7b5fc4f9bc
      route-controller-manager: "true"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:configmaps/client-ca: {}
            f:configmaps/config: {}
            f:openshiftcontrollermanagers.operator.openshift.io/cluster: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:openshift-route-controller-manager-anti-affinity: {}
            f:pod-template-hash: {}
            f:route-controller-manager: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"144eb3cf-3263-4b19-86a7-f9f3e3a825cf"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"route-controller-manager"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/configmaps/client-ca"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/serving-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"serving-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:38:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-106-212
      operation: Update
      subresource: status
      time: "2023-12-06T09:39:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:39:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.44"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:39:03Z"
    name: route-controller-manager-7b5fc4f9bc-b6svn
    namespace: openshift-route-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: route-controller-manager-7b5fc4f9bc
      uid: 144eb3cf-3263-4b19-86a7-f9f3e3a825cf
    resourceVersion: "31594"
    uid: f21ec615-9771-4543-9235-2e23e365278e
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app: route-controller-manager
              openshift-route-controller-manager-anti-affinity: "true"
              route-controller-manager: "true"
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --config=/var/run/configmaps/config/config.yaml
      - -v=2
      command:
      - route-controller-manager
      - start
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:2c1d5ff409fee135bb000f8214940851131daca4f019ea01dc92b1c313c7a5a5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: route-controller-manager
      ports:
      - containerPort: 8443
        protocol: TCP
      readinessProbe:
        failureThreshold: 10
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000570000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/configmaps/config
        name: config
      - mountPath: /var/run/configmaps/client-ca
        name: client-ca
      - mountPath: /var/run/secrets/serving-cert
        name: serving-cert
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cp7xc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: route-controller-manager-sa-dockercfg-lmqqb
    nodeName: ip-10-0-106-212.us-west-1.compute.internal
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000570000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c24,c9
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: route-controller-manager-sa
    serviceAccountName: route-controller-manager-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 120
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: config
      name: config
    - configMap:
        defaultMode: 420
        name: client-ca
      name: client-ca
    - name: serving-cert
      secret:
        defaultMode: 420
        secretName: serving-cert
    - name: kube-api-access-cp7xc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:39:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:39:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:39:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:39:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://fcdd8341c5768b787bb09a4e5121a197cb07f6a75d1d71ff26f5c44df2594eba
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:2c1d5ff409fee135bb000f8214940851131daca4f019ea01dc92b1c313c7a5a5
      imageID: 5e6aa7621ba790344d526f5e9bfc79b55c0ebe02176908ec4761896c744701c8
      lastState: {}
      name: route-controller-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:39:01Z"
    hostIP: 10.0.106.212
    phase: Running
    podIP: 10.128.0.44
    podIPs:
    - ip: 10.128.0.44
    qosClass: Burstable
    startTime: "2023-12-06T09:39:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      configmaps/client-ca: "9362"
      configmaps/config: "31149"
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.43/23"],"mac_address":"0a:58:0a:82:00:2b","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.43/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.43"
            ],
            "mac": "0a:58:0a:82:00:2b",
            "default": true,
            "dns": {}
        }]
      openshift.io/scc: restricted-v2
      openshiftcontrollermanagers.operator.openshift.io/cluster: "3"
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-12-06T09:39:07Z"
    generateName: route-controller-manager-7b5fc4f9bc-
    labels:
      app: route-controller-manager
      openshift-route-controller-manager-anti-affinity: "true"
      pod-template-hash: 7b5fc4f9bc
      route-controller-manager: "true"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:configmaps/client-ca: {}
            f:configmaps/config: {}
            f:openshiftcontrollermanagers.operator.openshift.io/cluster: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:openshift-route-controller-manager-anti-affinity: {}
            f:pod-template-hash: {}
            f:route-controller-manager: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"144eb3cf-3263-4b19-86a7-f9f3e3a825cf"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"route-controller-manager"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/run/configmaps/client-ca"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/serving-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"serving-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:39:07Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2023-12-06T09:39:07Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-94-160
      operation: Update
      subresource: status
      time: "2023-12-06T09:39:08Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:39:09Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.43"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:39:10Z"
    name: route-controller-manager-7b5fc4f9bc-x64mv
    namespace: openshift-route-controller-manager
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: route-controller-manager-7b5fc4f9bc
      uid: 144eb3cf-3263-4b19-86a7-f9f3e3a825cf
    resourceVersion: "32624"
    uid: 41d181ff-152f-49e0-9249-2528e029fc19
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app: route-controller-manager
              openshift-route-controller-manager-anti-affinity: "true"
              route-controller-manager: "true"
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - --config=/var/run/configmaps/config/config.yaml
      - -v=2
      command:
      - route-controller-manager
      - start
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:2c1d5ff409fee135bb000f8214940851131daca4f019ea01dc92b1c313c7a5a5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: route-controller-manager
      ports:
      - containerPort: 8443
        protocol: TCP
      readinessProbe:
        failureThreshold: 10
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000570000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/configmaps/config
        name: config
      - mountPath: /var/run/configmaps/client-ca
        name: client-ca
      - mountPath: /var/run/secrets/serving-cert
        name: serving-cert
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hfndm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: route-controller-manager-sa-dockercfg-lmqqb
    nodeName: ip-10-0-94-160.us-west-1.compute.internal
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000570000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c24,c9
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: route-controller-manager-sa
    serviceAccountName: route-controller-manager-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 120
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: config
      name: config
    - configMap:
        defaultMode: 420
        name: client-ca
      name: client-ca
    - name: serving-cert
      secret:
        defaultMode: 420
        secretName: serving-cert
    - name: kube-api-access-hfndm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:39:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:39:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:39:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:39:08Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://fcb89db7fd7df38791dc1ac7ca3b3657291f769fc6e6bb847504b136a4e778e0
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:2c1d5ff409fee135bb000f8214940851131daca4f019ea01dc92b1c313c7a5a5
      imageID: 5e6aa7621ba790344d526f5e9bfc79b55c0ebe02176908ec4761896c744701c8
      lastState: {}
      name: route-controller-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:39:09Z"
    hostIP: 10.0.94.160
    phase: Running
    podIP: 10.130.0.43
    podIPs:
    - ip: 10.130.0.43
    qosClass: Burstable
    startTime: "2023-12-06T09:39:08Z"
kind: PodList
metadata:
  resourceVersion: "48046"
