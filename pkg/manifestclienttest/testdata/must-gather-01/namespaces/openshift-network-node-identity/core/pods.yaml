---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/scc: hostnetwork-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-12-06T09:20:18Z"
    generateName: network-node-identity-
    labels:
      app: network-node-identity
      component: network
      controller-revision-hash: 6b468f9c6
      kubernetes.io/os: linux
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6a648b1f-5a52-4fcd-b5d4-b7f71979bdde"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"approver"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"LOGLEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/ovnkube-identity-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"webhook"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KUBERNETES_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"LOGLEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/webhook-cert/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/ovnkube-identity-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"ovnkube-identity-cm"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"webhook-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:20:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.106.212"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:20:30Z"
    name: network-node-identity-899zs
    namespace: openshift-network-node-identity
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-node-identity
      uid: 6a648b1f-5a52-4fcd-b5d4-b7f71979bdde
    resourceVersion: "4103"
    uid: fdc524d9-d66c-4754-bf75-ba99b0b052ec
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-106-212.us-west-1.compute.internal
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        if [[ -f "/env/_master" ]]; then
          set -o allexport
          source "/env/_master"
          set +o allexport
        fi

        ho_enable=
        echo "I$(date "+%m%d %H:%M:%S.%N") - network-node-identity - start webhook"
        # extra-allowed-user: service account `ovn-kubernetes-control-plane`
        # sets pod annotations in multi-homing layer3 network controller (cluster-manager)
        exec /usr/bin/ovnkube-identity  --k8s-apiserver=https://api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com:6443 \
            --webhook-cert-dir="/etc/webhook-cert" \
            --webhook-host=127.0.0.1 \
            --webhook-port=9743 \
            ${ho_enable} \
            --enable-interconnect \
            --disable-approver \
            --extra-allowed-user="system:serviceaccount:openshift-ovn-kubernetes:ovn-kubernetes-control-plane" \
            --wait-for-kubernetes-api=200s \
            --pod-admission-conditions="/var/run/ovnkube-identity-config/additional-pod-admission-cond.json" \
            --loglevel="${LOGLEVEL}"
      env:
      - name: LOGLEVEL
        value: "2"
      - name: KUBERNETES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:b4bb1614b8b7cc9d9ccbf3e70fb4f1d6cfb730ab0f18a0f97685acabb9b328ae
      imagePullPolicy: IfNotPresent
      name: webhook
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000530000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook-cert/
        name: webhook-cert
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/ovnkube-identity-config
        name: ovnkube-identity-cm
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7cd7w
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        if [[ -f "/env/_master" ]]; then
          set -o allexport
          source "/env/_master"
          set +o allexport
        fi

        echo "I$(date "+%m%d %H:%M:%S.%N") - network-node-identity - start approver"
        exec /usr/bin/ovnkube-identity  --k8s-apiserver=https://api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com:6443 \
            --disable-webhook \
            --csr-acceptance-conditions="/var/run/ovnkube-identity-config/additional-cert-acceptance-cond.json" \
            --loglevel="${LOGLEVEL}"
      env:
      - name: LOGLEVEL
        value: "4"
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:b4bb1614b8b7cc9d9ccbf3e70fb4f1d6cfb730ab0f18a0f97685acabb9b328ae
      imagePullPolicy: IfNotPresent
      name: approver
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000530000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/ovnkube-identity-config
        name: ovnkube-identity-cm
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7cd7w
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-0-106-212.us-west-1.compute.internal
    nodeSelector:
      beta.kubernetes.io/os: linux
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000530000
      seLinuxOptions:
        level: s0:c23,c12
      seccompProfile:
        type: RuntimeDefault
      supplementalGroups:
      - 1000530000
    serviceAccount: network-node-identity
    serviceAccountName: network-node-identity
    terminationGracePeriodSeconds: 200
    tolerations:
    - key: node-role.kubernetes.io/master
      operator: Exists
    - key: node.kubernetes.io/not-ready
      operator: Exists
    - key: node.kubernetes.io/unreachable
      operator: Exists
    - key: node.kubernetes.io/network-unavailable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: webhook-cert
      secret:
        defaultMode: 420
        secretName: network-node-identity-cert
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - configMap:
        defaultMode: 420
        items:
        - key: additional-cert-acceptance-cond.json
          path: additional-cert-acceptance-cond.json
        - key: additional-pod-admission-cond.json
          path: additional-pod-admission-cond.json
        name: ovnkube-identity-cm
      name: ovnkube-identity-cm
    - name: kube-api-access-7cd7w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://ddc14da064fec11af63a0c23999fbb676f2cec7029301d6ae93eeb944c0156b1
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:b4bb1614b8b7cc9d9ccbf3e70fb4f1d6cfb730ab0f18a0f97685acabb9b328ae
      imageID: 25ccdd6397ca269474b63e22544768893531fe37e2d611df2c99efa5194d82f0
      lastState: {}
      name: approver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:20:29Z"
    - containerID: cri-o://468e85f90e939f1cd18ca22849e3d0b318c295d82ec0b302013bd9bf64f93768
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:b4bb1614b8b7cc9d9ccbf3e70fb4f1d6cfb730ab0f18a0f97685acabb9b328ae
      imageID: 25ccdd6397ca269474b63e22544768893531fe37e2d611df2c99efa5194d82f0
      lastState: {}
      name: webhook
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:20:29Z"
    hostIP: 10.0.106.212
    phase: Running
    podIP: 10.0.106.212
    podIPs:
    - ip: 10.0.106.212
    qosClass: Burstable
    startTime: "2023-12-06T09:20:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/scc: hostnetwork-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-12-06T09:20:18Z"
    generateName: network-node-identity-
    labels:
      app: network-node-identity
      component: network
      controller-revision-hash: 6b468f9c6
      kubernetes.io/os: linux
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6a648b1f-5a52-4fcd-b5d4-b7f71979bdde"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"approver"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"LOGLEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/ovnkube-identity-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"webhook"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KUBERNETES_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"LOGLEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/webhook-cert/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/ovnkube-identity-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"ovnkube-identity-cm"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"webhook-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:20:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.94.160"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:20:26Z"
    name: network-node-identity-skz8x
    namespace: openshift-network-node-identity
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-node-identity
      uid: 6a648b1f-5a52-4fcd-b5d4-b7f71979bdde
    resourceVersion: "3982"
    uid: e44eae9a-944f-41a7-a7ee-0ed5d9af58e4
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-94-160.us-west-1.compute.internal
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        if [[ -f "/env/_master" ]]; then
          set -o allexport
          source "/env/_master"
          set +o allexport
        fi

        ho_enable=
        echo "I$(date "+%m%d %H:%M:%S.%N") - network-node-identity - start webhook"
        # extra-allowed-user: service account `ovn-kubernetes-control-plane`
        # sets pod annotations in multi-homing layer3 network controller (cluster-manager)
        exec /usr/bin/ovnkube-identity  --k8s-apiserver=https://api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com:6443 \
            --webhook-cert-dir="/etc/webhook-cert" \
            --webhook-host=127.0.0.1 \
            --webhook-port=9743 \
            ${ho_enable} \
            --enable-interconnect \
            --disable-approver \
            --extra-allowed-user="system:serviceaccount:openshift-ovn-kubernetes:ovn-kubernetes-control-plane" \
            --wait-for-kubernetes-api=200s \
            --pod-admission-conditions="/var/run/ovnkube-identity-config/additional-pod-admission-cond.json" \
            --loglevel="${LOGLEVEL}"
      env:
      - name: LOGLEVEL
        value: "2"
      - name: KUBERNETES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:b4bb1614b8b7cc9d9ccbf3e70fb4f1d6cfb730ab0f18a0f97685acabb9b328ae
      imagePullPolicy: IfNotPresent
      name: webhook
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000530000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook-cert/
        name: webhook-cert
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/ovnkube-identity-config
        name: ovnkube-identity-cm
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-czgcm
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        if [[ -f "/env/_master" ]]; then
          set -o allexport
          source "/env/_master"
          set +o allexport
        fi

        echo "I$(date "+%m%d %H:%M:%S.%N") - network-node-identity - start approver"
        exec /usr/bin/ovnkube-identity  --k8s-apiserver=https://api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com:6443 \
            --disable-webhook \
            --csr-acceptance-conditions="/var/run/ovnkube-identity-config/additional-cert-acceptance-cond.json" \
            --loglevel="${LOGLEVEL}"
      env:
      - name: LOGLEVEL
        value: "4"
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:b4bb1614b8b7cc9d9ccbf3e70fb4f1d6cfb730ab0f18a0f97685acabb9b328ae
      imagePullPolicy: IfNotPresent
      name: approver
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000530000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/ovnkube-identity-config
        name: ovnkube-identity-cm
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-czgcm
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-0-94-160.us-west-1.compute.internal
    nodeSelector:
      beta.kubernetes.io/os: linux
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000530000
      seLinuxOptions:
        level: s0:c23,c12
      seccompProfile:
        type: RuntimeDefault
      supplementalGroups:
      - 1000530000
    serviceAccount: network-node-identity
    serviceAccountName: network-node-identity
    terminationGracePeriodSeconds: 200
    tolerations:
    - key: node-role.kubernetes.io/master
      operator: Exists
    - key: node.kubernetes.io/not-ready
      operator: Exists
    - key: node.kubernetes.io/unreachable
      operator: Exists
    - key: node.kubernetes.io/network-unavailable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: webhook-cert
      secret:
        defaultMode: 420
        secretName: network-node-identity-cert
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - configMap:
        defaultMode: 420
        items:
        - key: additional-cert-acceptance-cond.json
          path: additional-cert-acceptance-cond.json
        - key: additional-pod-admission-cond.json
          path: additional-pod-admission-cond.json
        name: ovnkube-identity-cm
      name: ovnkube-identity-cm
    - name: kube-api-access-czgcm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://5a8c7efe0086b902efe10839efc359f9003d2e2e4272f012172310592b348f63
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:b4bb1614b8b7cc9d9ccbf3e70fb4f1d6cfb730ab0f18a0f97685acabb9b328ae
      imageID: 25ccdd6397ca269474b63e22544768893531fe37e2d611df2c99efa5194d82f0
      lastState: {}
      name: approver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:20:26Z"
    - containerID: cri-o://2b2bb14617add660e2773ca65df491c6f03114a178875813b22a87bafb7009c4
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:b4bb1614b8b7cc9d9ccbf3e70fb4f1d6cfb730ab0f18a0f97685acabb9b328ae
      imageID: 25ccdd6397ca269474b63e22544768893531fe37e2d611df2c99efa5194d82f0
      lastState: {}
      name: webhook
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:20:25Z"
    hostIP: 10.0.94.160
    phase: Running
    podIP: 10.0.94.160
    podIPs:
    - ip: 10.0.94.160
    qosClass: Burstable
    startTime: "2023-12-06T09:20:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/scc: hostnetwork-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2023-12-06T09:20:18Z"
    generateName: network-node-identity-
    labels:
      app: network-node-identity
      component: network
      controller-revision-hash: 6b468f9c6
      kubernetes.io/os: linux
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6a648b1f-5a52-4fcd-b5d4-b7f71979bdde"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"approver"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"LOGLEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/ovnkube-identity-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"webhook"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"KUBERNETES_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"LOGLEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/webhook-cert/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/ovnkube-identity-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"ovnkube-identity-cm"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"webhook-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:20:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.21.63"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:20:27Z"
    name: network-node-identity-wpxdt
    namespace: openshift-network-node-identity
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-node-identity
      uid: 6a648b1f-5a52-4fcd-b5d4-b7f71979bdde
    resourceVersion: "4012"
    uid: a880c86e-8476-4d7c-b350-133703405cf9
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-21-63.us-west-1.compute.internal
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        if [[ -f "/env/_master" ]]; then
          set -o allexport
          source "/env/_master"
          set +o allexport
        fi

        ho_enable=
        echo "I$(date "+%m%d %H:%M:%S.%N") - network-node-identity - start webhook"
        # extra-allowed-user: service account `ovn-kubernetes-control-plane`
        # sets pod annotations in multi-homing layer3 network controller (cluster-manager)
        exec /usr/bin/ovnkube-identity  --k8s-apiserver=https://api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com:6443 \
            --webhook-cert-dir="/etc/webhook-cert" \
            --webhook-host=127.0.0.1 \
            --webhook-port=9743 \
            ${ho_enable} \
            --enable-interconnect \
            --disable-approver \
            --extra-allowed-user="system:serviceaccount:openshift-ovn-kubernetes:ovn-kubernetes-control-plane" \
            --wait-for-kubernetes-api=200s \
            --pod-admission-conditions="/var/run/ovnkube-identity-config/additional-pod-admission-cond.json" \
            --loglevel="${LOGLEVEL}"
      env:
      - name: LOGLEVEL
        value: "2"
      - name: KUBERNETES_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:b4bb1614b8b7cc9d9ccbf3e70fb4f1d6cfb730ab0f18a0f97685acabb9b328ae
      imagePullPolicy: IfNotPresent
      name: webhook
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000530000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook-cert/
        name: webhook-cert
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/ovnkube-identity-config
        name: ovnkube-identity-cm
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r2dxs
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        if [[ -f "/env/_master" ]]; then
          set -o allexport
          source "/env/_master"
          set +o allexport
        fi

        echo "I$(date "+%m%d %H:%M:%S.%N") - network-node-identity - start approver"
        exec /usr/bin/ovnkube-identity  --k8s-apiserver=https://api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com:6443 \
            --disable-webhook \
            --csr-acceptance-conditions="/var/run/ovnkube-identity-config/additional-cert-acceptance-cond.json" \
            --loglevel="${LOGLEVEL}"
      env:
      - name: LOGLEVEL
        value: "4"
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:b4bb1614b8b7cc9d9ccbf3e70fb4f1d6cfb730ab0f18a0f97685acabb9b328ae
      imagePullPolicy: IfNotPresent
      name: approver
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000530000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/ovnkube-identity-config
        name: ovnkube-identity-cm
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-r2dxs
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: ip-10-0-21-63.us-west-1.compute.internal
    nodeSelector:
      beta.kubernetes.io/os: linux
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000530000
      seLinuxOptions:
        level: s0:c23,c12
      seccompProfile:
        type: RuntimeDefault
      supplementalGroups:
      - 1000530000
    serviceAccount: network-node-identity
    serviceAccountName: network-node-identity
    terminationGracePeriodSeconds: 200
    tolerations:
    - key: node-role.kubernetes.io/master
      operator: Exists
    - key: node.kubernetes.io/not-ready
      operator: Exists
    - key: node.kubernetes.io/unreachable
      operator: Exists
    - key: node.kubernetes.io/network-unavailable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - name: webhook-cert
      secret:
        defaultMode: 420
        secretName: network-node-identity-cert
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - configMap:
        defaultMode: 420
        items:
        - key: additional-cert-acceptance-cond.json
          path: additional-cert-acceptance-cond.json
        - key: additional-pod-admission-cond.json
          path: additional-pod-admission-cond.json
        name: ovnkube-identity-cm
      name: ovnkube-identity-cm
    - name: kube-api-access-r2dxs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:18Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://51a483bb0770f5efe39d468bb52832f283911c4b5591bf21e3d8f95f23f14b81
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:b4bb1614b8b7cc9d9ccbf3e70fb4f1d6cfb730ab0f18a0f97685acabb9b328ae
      imageID: 25ccdd6397ca269474b63e22544768893531fe37e2d611df2c99efa5194d82f0
      lastState: {}
      name: approver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:20:27Z"
    - containerID: cri-o://ca3d5c06df787b2ce3808ac82d1016b8f4c35945d6bece7cd1e762ec85404380
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:b4bb1614b8b7cc9d9ccbf3e70fb4f1d6cfb730ab0f18a0f97685acabb9b328ae
      imageID: 25ccdd6397ca269474b63e22544768893531fe37e2d611df2c99efa5194d82f0
      lastState: {}
      name: webhook
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:20:27Z"
    hostIP: 10.0.21.63
    phase: Running
    podIP: 10.0.21.63
    podIPs:
    - ip: 10.0.21.63
    qosClass: Burstable
    startTime: "2023-12-06T09:20:18Z"
kind: PodList
metadata:
  resourceVersion: "48010"
