---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.34/23"],"mac_address":"0a:58:0a:80:00:22","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.34/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.34"
            ],
            "mac": "0a:58:0a:80:00:22",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:29:52Z"
    labels:
      app: installer
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"deb5cac8-99cd-4246-b6d4-046536954510"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"installer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:29:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-106-212
      operation: Update
      subresource: status
      time: "2023-12-06T09:29:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:29:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.34"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:30:32Z"
    name: installer-5-ip-10-0-106-212.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-5
      uid: deb5cac8-99cd-4246-b6d4-046536954510
    resourceVersion: "24144"
    uid: 291fb707-7c27-4e0c-b976-12c22c263ad3
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=2
      - --revision=5
      - --namespace=openshift-kube-apiserver
      - --pod=kube-apiserver-pod
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --pod-manifest-dir=/etc/kubernetes/manifests
      - --configmaps=kube-apiserver-pod
      - --configmaps=config
      - --configmaps=kube-apiserver-cert-syncer-kubeconfig
      - --optional-configmaps=oauth-metadata
      - --optional-configmaps=cloud-config
      - --configmaps=bound-sa-token-signing-certs
      - --configmaps=etcd-serving-ca
      - --optional-configmaps=kube-apiserver-server-ca
      - --configmaps=kubelet-serving-ca
      - --configmaps=sa-token-signing-certs
      - --configmaps=kube-apiserver-audit-policies
      - --secrets=etcd-client
      - --optional-secrets=encryption-config
      - --secrets=localhost-recovery-serving-certkey
      - --secrets=localhost-recovery-client-token
      - --optional-secrets=webhook-authenticator
      - --cert-dir=/etc/kubernetes/static-pod-resources/kube-apiserver-certs
      - --cert-configmaps=aggregator-client-ca
      - --cert-configmaps=client-ca
      - --optional-cert-configmaps=trusted-ca-bundle
      - --cert-configmaps=control-plane-node-kubeconfig
      - --cert-configmaps=check-endpoints-kubeconfig
      - --cert-secrets=aggregator-client
      - --cert-secrets=localhost-serving-cert-certkey
      - --cert-secrets=service-network-serving-certkey
      - --cert-secrets=external-loadbalancer-serving-certkey
      - --cert-secrets=internal-loadbalancer-serving-certkey
      - --cert-secrets=bound-service-account-signing-key
      - --cert-secrets=control-plane-node-admin-client-cert-key
      - --cert-secrets=check-endpoints-client-cert-key
      - --cert-secrets=kubelet-client
      - --cert-secrets=node-kubeconfigs
      - --optional-cert-secrets=user-serving-cert
      - --optional-cert-secrets=user-serving-cert-000
      - --optional-cert-secrets=user-serving-cert-001
      - --optional-cert-secrets=user-serving-cert-002
      - --optional-cert-secrets=user-serving-cert-003
      - --optional-cert-secrets=user-serving-cert-004
      - --optional-cert-secrets=user-serving-cert-005
      - --optional-cert-secrets=user-serving-cert-006
      - --optional-cert-secrets=user-serving-cert-007
      - --optional-cert-secrets=user-serving-cert-008
      - --optional-cert-secrets=user-serving-cert-009
      command:
      - cluster-kube-apiserver-operator
      - installer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: installer
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
      - mountPath: /var/lock
        name: var-lock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tckxz
    nodeName: ip-10-0-106-212.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - hostPath:
        path: /var/lock
        type: ""
      name: var-lock
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:29:52Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:30:30Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:30:30Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:29:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://349cd20ecb5035be118413d0a7a3fb8cd473a0518b0aec15b38742b995c5bf2a
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: installer
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://349cd20ecb5035be118413d0a7a3fb8cd473a0518b0aec15b38742b995c5bf2a
          exitCode: 0
          finishedAt: "2023-12-06T09:30:30Z"
          reason: Completed
          startedAt: "2023-12-06T09:29:53Z"
    hostIP: 10.0.106.212
    phase: Succeeded
    podIP: 10.128.0.34
    podIPs:
    - ip: 10.128.0.34
    qosClass: Guaranteed
    startTime: "2023-12-06T09:29:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.74/23"],"mac_address":"0a:58:0a:81:00:4a","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.74/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.74"
            ],
            "mac": "0a:58:0a:81:00:4a",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:26:46Z"
    labels:
      app: installer
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"deb5cac8-99cd-4246-b6d4-046536954510"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"installer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:26:46Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-21-63
      operation: Update
      subresource: status
      time: "2023-12-06T09:26:46Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:26:47Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.74"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:27:27Z"
    name: installer-5-ip-10-0-21-63.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-5
      uid: deb5cac8-99cd-4246-b6d4-046536954510
    resourceVersion: "21099"
    uid: 5736b8f6-0f15-4180-b2ee-46fde06fd08f
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=2
      - --revision=5
      - --namespace=openshift-kube-apiserver
      - --pod=kube-apiserver-pod
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --pod-manifest-dir=/etc/kubernetes/manifests
      - --configmaps=kube-apiserver-pod
      - --configmaps=config
      - --configmaps=kube-apiserver-cert-syncer-kubeconfig
      - --optional-configmaps=oauth-metadata
      - --optional-configmaps=cloud-config
      - --configmaps=bound-sa-token-signing-certs
      - --configmaps=etcd-serving-ca
      - --optional-configmaps=kube-apiserver-server-ca
      - --configmaps=kubelet-serving-ca
      - --configmaps=sa-token-signing-certs
      - --configmaps=kube-apiserver-audit-policies
      - --secrets=etcd-client
      - --optional-secrets=encryption-config
      - --secrets=localhost-recovery-serving-certkey
      - --secrets=localhost-recovery-client-token
      - --optional-secrets=webhook-authenticator
      - --cert-dir=/etc/kubernetes/static-pod-resources/kube-apiserver-certs
      - --cert-configmaps=aggregator-client-ca
      - --cert-configmaps=client-ca
      - --optional-cert-configmaps=trusted-ca-bundle
      - --cert-configmaps=control-plane-node-kubeconfig
      - --cert-configmaps=check-endpoints-kubeconfig
      - --cert-secrets=aggregator-client
      - --cert-secrets=localhost-serving-cert-certkey
      - --cert-secrets=service-network-serving-certkey
      - --cert-secrets=external-loadbalancer-serving-certkey
      - --cert-secrets=internal-loadbalancer-serving-certkey
      - --cert-secrets=bound-service-account-signing-key
      - --cert-secrets=control-plane-node-admin-client-cert-key
      - --cert-secrets=check-endpoints-client-cert-key
      - --cert-secrets=kubelet-client
      - --cert-secrets=node-kubeconfigs
      - --optional-cert-secrets=user-serving-cert
      - --optional-cert-secrets=user-serving-cert-000
      - --optional-cert-secrets=user-serving-cert-001
      - --optional-cert-secrets=user-serving-cert-002
      - --optional-cert-secrets=user-serving-cert-003
      - --optional-cert-secrets=user-serving-cert-004
      - --optional-cert-secrets=user-serving-cert-005
      - --optional-cert-secrets=user-serving-cert-006
      - --optional-cert-secrets=user-serving-cert-007
      - --optional-cert-secrets=user-serving-cert-008
      - --optional-cert-secrets=user-serving-cert-009
      command:
      - cluster-kube-apiserver-operator
      - installer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: installer
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
      - mountPath: /var/lock
        name: var-lock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tckxz
    nodeName: ip-10-0-21-63.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - hostPath:
        path: /var/lock
        type: ""
      name: var-lock
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:46Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:27:25Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:27:25Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://82cac31b9af29e38f3e79ca3a33279df470fec44f31352078d7e8aa3e07b3789
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: installer
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://82cac31b9af29e38f3e79ca3a33279df470fec44f31352078d7e8aa3e07b3789
          exitCode: 0
          finishedAt: "2023-12-06T09:27:24Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:47Z"
    hostIP: 10.0.21.63
    phase: Succeeded
    podIP: 10.129.0.74
    podIPs:
    - ip: 10.129.0.74
    qosClass: Guaranteed
    startTime: "2023-12-06T09:26:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.34/23"],"mac_address":"0a:58:0a:82:00:22","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.34/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.34"
            ],
            "mac": "0a:58:0a:82:00:22",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:28:20Z"
    labels:
      app: installer
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"deb5cac8-99cd-4246-b6d4-046536954510"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"installer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:28:20Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-94-160
      operation: Update
      subresource: status
      time: "2023-12-06T09:28:20Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:28:20Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.34"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:29:00Z"
    name: installer-5-ip-10-0-94-160.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-5
      uid: deb5cac8-99cd-4246-b6d4-046536954510
    resourceVersion: "22800"
    uid: 001d9f0a-67c1-4aca-a294-ab2e745d37a5
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=2
      - --revision=5
      - --namespace=openshift-kube-apiserver
      - --pod=kube-apiserver-pod
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --pod-manifest-dir=/etc/kubernetes/manifests
      - --configmaps=kube-apiserver-pod
      - --configmaps=config
      - --configmaps=kube-apiserver-cert-syncer-kubeconfig
      - --optional-configmaps=oauth-metadata
      - --optional-configmaps=cloud-config
      - --configmaps=bound-sa-token-signing-certs
      - --configmaps=etcd-serving-ca
      - --optional-configmaps=kube-apiserver-server-ca
      - --configmaps=kubelet-serving-ca
      - --configmaps=sa-token-signing-certs
      - --configmaps=kube-apiserver-audit-policies
      - --secrets=etcd-client
      - --optional-secrets=encryption-config
      - --secrets=localhost-recovery-serving-certkey
      - --secrets=localhost-recovery-client-token
      - --optional-secrets=webhook-authenticator
      - --cert-dir=/etc/kubernetes/static-pod-resources/kube-apiserver-certs
      - --cert-configmaps=aggregator-client-ca
      - --cert-configmaps=client-ca
      - --optional-cert-configmaps=trusted-ca-bundle
      - --cert-configmaps=control-plane-node-kubeconfig
      - --cert-configmaps=check-endpoints-kubeconfig
      - --cert-secrets=aggregator-client
      - --cert-secrets=localhost-serving-cert-certkey
      - --cert-secrets=service-network-serving-certkey
      - --cert-secrets=external-loadbalancer-serving-certkey
      - --cert-secrets=internal-loadbalancer-serving-certkey
      - --cert-secrets=bound-service-account-signing-key
      - --cert-secrets=control-plane-node-admin-client-cert-key
      - --cert-secrets=check-endpoints-client-cert-key
      - --cert-secrets=kubelet-client
      - --cert-secrets=node-kubeconfigs
      - --optional-cert-secrets=user-serving-cert
      - --optional-cert-secrets=user-serving-cert-000
      - --optional-cert-secrets=user-serving-cert-001
      - --optional-cert-secrets=user-serving-cert-002
      - --optional-cert-secrets=user-serving-cert-003
      - --optional-cert-secrets=user-serving-cert-004
      - --optional-cert-secrets=user-serving-cert-005
      - --optional-cert-secrets=user-serving-cert-006
      - --optional-cert-secrets=user-serving-cert-007
      - --optional-cert-secrets=user-serving-cert-008
      - --optional-cert-secrets=user-serving-cert-009
      command:
      - cluster-kube-apiserver-operator
      - installer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: installer
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
      - mountPath: /var/lock
        name: var-lock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tckxz
    nodeName: ip-10-0-94-160.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - hostPath:
        path: /var/lock
        type: ""
      name: var-lock
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:28:20Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:28:58Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:28:58Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:28:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://5687f27286a24b86bb2c5ad31b859f4353b2938a38ff86b03794a9d14399ded1
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: installer
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://5687f27286a24b86bb2c5ad31b859f4353b2938a38ff86b03794a9d14399ded1
          exitCode: 0
          finishedAt: "2023-12-06T09:28:58Z"
          reason: Completed
          startedAt: "2023-12-06T09:28:20Z"
    hostIP: 10.0.94.160
    phase: Succeeded
    podIP: 10.130.0.34
    podIPs:
    - ip: 10.130.0.34
    qosClass: Guaranteed
    startTime: "2023-12-06T09:28:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.42/23"],"mac_address":"0a:58:0a:80:00:2a","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.42/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.42"
            ],
            "mac": "0a:58:0a:80:00:2a",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:35:34Z"
    labels:
      app: installer
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c58daefa-bf6a-404c-ae09-b8e77d842294"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"installer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:35:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-106-212
      operation: Update
      subresource: status
      time: "2023-12-06T09:35:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:35:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.42"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:36:14Z"
    name: installer-6-ip-10-0-106-212.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-6
      uid: c58daefa-bf6a-404c-ae09-b8e77d842294
    resourceVersion: "28350"
    uid: e8bbe8ee-0882-4224-b439-7bf2633ec640
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=2
      - --revision=6
      - --namespace=openshift-kube-apiserver
      - --pod=kube-apiserver-pod
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --pod-manifest-dir=/etc/kubernetes/manifests
      - --configmaps=kube-apiserver-pod
      - --configmaps=config
      - --configmaps=kube-apiserver-cert-syncer-kubeconfig
      - --optional-configmaps=oauth-metadata
      - --optional-configmaps=cloud-config
      - --configmaps=bound-sa-token-signing-certs
      - --configmaps=etcd-serving-ca
      - --optional-configmaps=kube-apiserver-server-ca
      - --configmaps=kubelet-serving-ca
      - --configmaps=sa-token-signing-certs
      - --configmaps=kube-apiserver-audit-policies
      - --secrets=etcd-client
      - --optional-secrets=encryption-config
      - --secrets=localhost-recovery-serving-certkey
      - --secrets=localhost-recovery-client-token
      - --optional-secrets=webhook-authenticator
      - --cert-dir=/etc/kubernetes/static-pod-resources/kube-apiserver-certs
      - --cert-configmaps=aggregator-client-ca
      - --cert-configmaps=client-ca
      - --optional-cert-configmaps=trusted-ca-bundle
      - --cert-configmaps=control-plane-node-kubeconfig
      - --cert-configmaps=check-endpoints-kubeconfig
      - --cert-secrets=aggregator-client
      - --cert-secrets=localhost-serving-cert-certkey
      - --cert-secrets=service-network-serving-certkey
      - --cert-secrets=external-loadbalancer-serving-certkey
      - --cert-secrets=internal-loadbalancer-serving-certkey
      - --cert-secrets=bound-service-account-signing-key
      - --cert-secrets=control-plane-node-admin-client-cert-key
      - --cert-secrets=check-endpoints-client-cert-key
      - --cert-secrets=kubelet-client
      - --cert-secrets=node-kubeconfigs
      - --optional-cert-secrets=user-serving-cert
      - --optional-cert-secrets=user-serving-cert-000
      - --optional-cert-secrets=user-serving-cert-001
      - --optional-cert-secrets=user-serving-cert-002
      - --optional-cert-secrets=user-serving-cert-003
      - --optional-cert-secrets=user-serving-cert-004
      - --optional-cert-secrets=user-serving-cert-005
      - --optional-cert-secrets=user-serving-cert-006
      - --optional-cert-secrets=user-serving-cert-007
      - --optional-cert-secrets=user-serving-cert-008
      - --optional-cert-secrets=user-serving-cert-009
      command:
      - cluster-kube-apiserver-operator
      - installer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: installer
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
      - mountPath: /var/lock
        name: var-lock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tckxz
    nodeName: ip-10-0-106-212.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - hostPath:
        path: /var/lock
        type: ""
      name: var-lock
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:35:34Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:36:12Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:36:12Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:35:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://368522a0d5079bfd565e80b5283ae4da03926082cac489c75ec1083f34f25370
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: installer
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://368522a0d5079bfd565e80b5283ae4da03926082cac489c75ec1083f34f25370
          exitCode: 0
          finishedAt: "2023-12-06T09:36:12Z"
          reason: Completed
          startedAt: "2023-12-06T09:35:34Z"
    hostIP: 10.0.106.212
    phase: Succeeded
    podIP: 10.128.0.42
    podIPs:
    - ip: 10.128.0.42
    qosClass: Guaranteed
    startTime: "2023-12-06T09:35:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.43/23"],"mac_address":"0a:58:0a:80:00:2b","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.43/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.43"
            ],
            "mac": "0a:58:0a:80:00:2b",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:37:46Z"
    labels:
      app: installer
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9ee71d86-731f-446c-a398-1624ccffbdcf"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"installer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:37:46Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-106-212
      operation: Update
      subresource: status
      time: "2023-12-06T09:37:46Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:37:47Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.43"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:38:28Z"
    name: installer-7-ip-10-0-106-212.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-7
      uid: 9ee71d86-731f-446c-a398-1624ccffbdcf
    resourceVersion: "30735"
    uid: 31d34af0-06c9-4f69-a572-1d7286679200
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=2
      - --revision=7
      - --namespace=openshift-kube-apiserver
      - --pod=kube-apiserver-pod
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --pod-manifest-dir=/etc/kubernetes/manifests
      - --configmaps=kube-apiserver-pod
      - --configmaps=config
      - --configmaps=kube-apiserver-cert-syncer-kubeconfig
      - --optional-configmaps=oauth-metadata
      - --optional-configmaps=cloud-config
      - --configmaps=bound-sa-token-signing-certs
      - --configmaps=etcd-serving-ca
      - --optional-configmaps=kube-apiserver-server-ca
      - --configmaps=kubelet-serving-ca
      - --configmaps=sa-token-signing-certs
      - --configmaps=kube-apiserver-audit-policies
      - --secrets=etcd-client
      - --optional-secrets=encryption-config
      - --secrets=localhost-recovery-serving-certkey
      - --secrets=localhost-recovery-client-token
      - --optional-secrets=webhook-authenticator
      - --cert-dir=/etc/kubernetes/static-pod-resources/kube-apiserver-certs
      - --cert-configmaps=aggregator-client-ca
      - --cert-configmaps=client-ca
      - --optional-cert-configmaps=trusted-ca-bundle
      - --cert-configmaps=control-plane-node-kubeconfig
      - --cert-configmaps=check-endpoints-kubeconfig
      - --cert-secrets=aggregator-client
      - --cert-secrets=localhost-serving-cert-certkey
      - --cert-secrets=service-network-serving-certkey
      - --cert-secrets=external-loadbalancer-serving-certkey
      - --cert-secrets=internal-loadbalancer-serving-certkey
      - --cert-secrets=bound-service-account-signing-key
      - --cert-secrets=control-plane-node-admin-client-cert-key
      - --cert-secrets=check-endpoints-client-cert-key
      - --cert-secrets=kubelet-client
      - --cert-secrets=node-kubeconfigs
      - --optional-cert-secrets=user-serving-cert
      - --optional-cert-secrets=user-serving-cert-000
      - --optional-cert-secrets=user-serving-cert-001
      - --optional-cert-secrets=user-serving-cert-002
      - --optional-cert-secrets=user-serving-cert-003
      - --optional-cert-secrets=user-serving-cert-004
      - --optional-cert-secrets=user-serving-cert-005
      - --optional-cert-secrets=user-serving-cert-006
      - --optional-cert-secrets=user-serving-cert-007
      - --optional-cert-secrets=user-serving-cert-008
      - --optional-cert-secrets=user-serving-cert-009
      command:
      - cluster-kube-apiserver-operator
      - installer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: installer
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
      - mountPath: /var/lock
        name: var-lock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tckxz
    nodeName: ip-10-0-106-212.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - hostPath:
        path: /var/lock
        type: ""
      name: var-lock
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:37:46Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:38:26Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:38:26Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:37:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://d25343d7d79eb6cc40646dd853f6ff9b289d22896fc483c0cd03ef5e6b48525f
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: installer
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://d25343d7d79eb6cc40646dd853f6ff9b289d22896fc483c0cd03ef5e6b48525f
          exitCode: 0
          finishedAt: "2023-12-06T09:38:25Z"
          reason: Completed
          startedAt: "2023-12-06T09:37:47Z"
    hostIP: 10.0.106.212
    phase: Succeeded
    podIP: 10.128.0.43
    podIPs:
    - ip: 10.128.0.43
    qosClass: Guaranteed
    startTime: "2023-12-06T09:37:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.49/23"],"mac_address":"0a:58:0a:80:00:31","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.49/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.49"
            ],
            "mac": "0a:58:0a:80:00:31",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:39:22Z"
    labels:
      app: installer
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"87676840-2fda-4a6b-8d29-17534a0429b5"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"installer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:39:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-106-212
      operation: Update
      subresource: status
      time: "2023-12-06T09:39:22Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:39:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.49"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:40:04Z"
    name: installer-8-ip-10-0-106-212.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-8
      uid: 87676840-2fda-4a6b-8d29-17534a0429b5
    resourceVersion: "34344"
    uid: 30f2fdd1-a8a0-44df-b430-c2d7ea958c76
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=2
      - --revision=8
      - --namespace=openshift-kube-apiserver
      - --pod=kube-apiserver-pod
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --pod-manifest-dir=/etc/kubernetes/manifests
      - --configmaps=kube-apiserver-pod
      - --configmaps=config
      - --configmaps=kube-apiserver-cert-syncer-kubeconfig
      - --optional-configmaps=oauth-metadata
      - --optional-configmaps=cloud-config
      - --configmaps=bound-sa-token-signing-certs
      - --configmaps=etcd-serving-ca
      - --optional-configmaps=kube-apiserver-server-ca
      - --configmaps=kubelet-serving-ca
      - --configmaps=sa-token-signing-certs
      - --configmaps=kube-apiserver-audit-policies
      - --secrets=etcd-client
      - --optional-secrets=encryption-config
      - --secrets=localhost-recovery-serving-certkey
      - --secrets=localhost-recovery-client-token
      - --optional-secrets=webhook-authenticator
      - --cert-dir=/etc/kubernetes/static-pod-resources/kube-apiserver-certs
      - --cert-configmaps=aggregator-client-ca
      - --cert-configmaps=client-ca
      - --optional-cert-configmaps=trusted-ca-bundle
      - --cert-configmaps=control-plane-node-kubeconfig
      - --cert-configmaps=check-endpoints-kubeconfig
      - --cert-secrets=aggregator-client
      - --cert-secrets=localhost-serving-cert-certkey
      - --cert-secrets=service-network-serving-certkey
      - --cert-secrets=external-loadbalancer-serving-certkey
      - --cert-secrets=internal-loadbalancer-serving-certkey
      - --cert-secrets=bound-service-account-signing-key
      - --cert-secrets=control-plane-node-admin-client-cert-key
      - --cert-secrets=check-endpoints-client-cert-key
      - --cert-secrets=kubelet-client
      - --cert-secrets=node-kubeconfigs
      - --optional-cert-secrets=user-serving-cert
      - --optional-cert-secrets=user-serving-cert-000
      - --optional-cert-secrets=user-serving-cert-001
      - --optional-cert-secrets=user-serving-cert-002
      - --optional-cert-secrets=user-serving-cert-003
      - --optional-cert-secrets=user-serving-cert-004
      - --optional-cert-secrets=user-serving-cert-005
      - --optional-cert-secrets=user-serving-cert-006
      - --optional-cert-secrets=user-serving-cert-007
      - --optional-cert-secrets=user-serving-cert-008
      - --optional-cert-secrets=user-serving-cert-009
      command:
      - cluster-kube-apiserver-operator
      - installer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: installer
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
      - mountPath: /var/lock
        name: var-lock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tckxz
    nodeName: ip-10-0-106-212.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - hostPath:
        path: /var/lock
        type: ""
      name: var-lock
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:39:22Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:40:02Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:40:02Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:39:22Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://e3d4fdca3307143a2b61368755c5c9f26fda3e1d2e326a57f06f99bab04eff5e
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: installer
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://e3d4fdca3307143a2b61368755c5c9f26fda3e1d2e326a57f06f99bab04eff5e
          exitCode: 0
          finishedAt: "2023-12-06T09:40:02Z"
          reason: Completed
          startedAt: "2023-12-06T09:39:24Z"
    hostIP: 10.0.106.212
    phase: Succeeded
    podIP: 10.128.0.49
    podIPs:
    - ip: 10.128.0.49
    qosClass: Guaranteed
    startTime: "2023-12-06T09:39:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.55/23"],"mac_address":"0a:58:0a:80:00:37","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.55/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.55"
            ],
            "mac": "0a:58:0a:80:00:37",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:42:12Z"
    labels:
      app: installer
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"648ee445-d00c-452c-aa2e-30c214e15db0"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"installer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:42:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-106-212
      operation: Update
      subresource: status
      time: "2023-12-06T09:42:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:42:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.55"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:42:52Z"
    name: installer-9-ip-10-0-106-212.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-9
      uid: 648ee445-d00c-452c-aa2e-30c214e15db0
    resourceVersion: "37491"
    uid: ca5af518-4242-435a-b673-6e0aca0a7283
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=2
      - --revision=9
      - --namespace=openshift-kube-apiserver
      - --pod=kube-apiserver-pod
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --pod-manifest-dir=/etc/kubernetes/manifests
      - --configmaps=kube-apiserver-pod
      - --configmaps=config
      - --configmaps=kube-apiserver-cert-syncer-kubeconfig
      - --optional-configmaps=oauth-metadata
      - --optional-configmaps=cloud-config
      - --configmaps=bound-sa-token-signing-certs
      - --configmaps=etcd-serving-ca
      - --optional-configmaps=kube-apiserver-server-ca
      - --configmaps=kubelet-serving-ca
      - --configmaps=sa-token-signing-certs
      - --configmaps=kube-apiserver-audit-policies
      - --secrets=etcd-client
      - --optional-secrets=encryption-config
      - --secrets=localhost-recovery-serving-certkey
      - --secrets=localhost-recovery-client-token
      - --optional-secrets=webhook-authenticator
      - --cert-dir=/etc/kubernetes/static-pod-resources/kube-apiserver-certs
      - --cert-configmaps=aggregator-client-ca
      - --cert-configmaps=client-ca
      - --optional-cert-configmaps=trusted-ca-bundle
      - --cert-configmaps=control-plane-node-kubeconfig
      - --cert-configmaps=check-endpoints-kubeconfig
      - --cert-secrets=aggregator-client
      - --cert-secrets=localhost-serving-cert-certkey
      - --cert-secrets=service-network-serving-certkey
      - --cert-secrets=external-loadbalancer-serving-certkey
      - --cert-secrets=internal-loadbalancer-serving-certkey
      - --cert-secrets=bound-service-account-signing-key
      - --cert-secrets=control-plane-node-admin-client-cert-key
      - --cert-secrets=check-endpoints-client-cert-key
      - --cert-secrets=kubelet-client
      - --cert-secrets=node-kubeconfigs
      - --optional-cert-secrets=user-serving-cert
      - --optional-cert-secrets=user-serving-cert-000
      - --optional-cert-secrets=user-serving-cert-001
      - --optional-cert-secrets=user-serving-cert-002
      - --optional-cert-secrets=user-serving-cert-003
      - --optional-cert-secrets=user-serving-cert-004
      - --optional-cert-secrets=user-serving-cert-005
      - --optional-cert-secrets=user-serving-cert-006
      - --optional-cert-secrets=user-serving-cert-007
      - --optional-cert-secrets=user-serving-cert-008
      - --optional-cert-secrets=user-serving-cert-009
      command:
      - cluster-kube-apiserver-operator
      - installer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: installer
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
      - mountPath: /var/lock
        name: var-lock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tckxz
    nodeName: ip-10-0-106-212.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - hostPath:
        path: /var/lock
        type: ""
      name: var-lock
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:42:12Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:42:50Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:42:50Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:42:12Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://9215bdcf658016fc5e32b441bc046b7c1d5d81cf7daa187b1e1e439f4c0efe3a
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: installer
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://9215bdcf658016fc5e32b441bc046b7c1d5d81cf7daa187b1e1e439f4c0efe3a
          exitCode: 0
          finishedAt: "2023-12-06T09:42:50Z"
          reason: Completed
          startedAt: "2023-12-06T09:42:13Z"
    hostIP: 10.0.106.212
    phase: Succeeded
    podIP: 10.128.0.55
    podIPs:
    - ip: 10.128.0.55
    qosClass: Guaranteed
    startTime: "2023-12-06T09:42:12Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.89/23"],"mac_address":"0a:58:0a:81:00:59","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.89/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.89"
            ],
            "mac": "0a:58:0a:81:00:59",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:46:10Z"
    labels:
      app: installer
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"648ee445-d00c-452c-aa2e-30c214e15db0"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"installer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:46:10Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-21-63
      operation: Update
      subresource: status
      time: "2023-12-06T09:46:10Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:46:10Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.89"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:46:51Z"
    name: installer-9-ip-10-0-21-63.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-9
      uid: 648ee445-d00c-452c-aa2e-30c214e15db0
    resourceVersion: "40216"
    uid: f2829eb7-0259-4295-b850-f6877ecc29f6
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=2
      - --revision=9
      - --namespace=openshift-kube-apiserver
      - --pod=kube-apiserver-pod
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --pod-manifest-dir=/etc/kubernetes/manifests
      - --configmaps=kube-apiserver-pod
      - --configmaps=config
      - --configmaps=kube-apiserver-cert-syncer-kubeconfig
      - --optional-configmaps=oauth-metadata
      - --optional-configmaps=cloud-config
      - --configmaps=bound-sa-token-signing-certs
      - --configmaps=etcd-serving-ca
      - --optional-configmaps=kube-apiserver-server-ca
      - --configmaps=kubelet-serving-ca
      - --configmaps=sa-token-signing-certs
      - --configmaps=kube-apiserver-audit-policies
      - --secrets=etcd-client
      - --optional-secrets=encryption-config
      - --secrets=localhost-recovery-serving-certkey
      - --secrets=localhost-recovery-client-token
      - --optional-secrets=webhook-authenticator
      - --cert-dir=/etc/kubernetes/static-pod-resources/kube-apiserver-certs
      - --cert-configmaps=aggregator-client-ca
      - --cert-configmaps=client-ca
      - --optional-cert-configmaps=trusted-ca-bundle
      - --cert-configmaps=control-plane-node-kubeconfig
      - --cert-configmaps=check-endpoints-kubeconfig
      - --cert-secrets=aggregator-client
      - --cert-secrets=localhost-serving-cert-certkey
      - --cert-secrets=service-network-serving-certkey
      - --cert-secrets=external-loadbalancer-serving-certkey
      - --cert-secrets=internal-loadbalancer-serving-certkey
      - --cert-secrets=bound-service-account-signing-key
      - --cert-secrets=control-plane-node-admin-client-cert-key
      - --cert-secrets=check-endpoints-client-cert-key
      - --cert-secrets=kubelet-client
      - --cert-secrets=node-kubeconfigs
      - --optional-cert-secrets=user-serving-cert
      - --optional-cert-secrets=user-serving-cert-000
      - --optional-cert-secrets=user-serving-cert-001
      - --optional-cert-secrets=user-serving-cert-002
      - --optional-cert-secrets=user-serving-cert-003
      - --optional-cert-secrets=user-serving-cert-004
      - --optional-cert-secrets=user-serving-cert-005
      - --optional-cert-secrets=user-serving-cert-006
      - --optional-cert-secrets=user-serving-cert-007
      - --optional-cert-secrets=user-serving-cert-008
      - --optional-cert-secrets=user-serving-cert-009
      command:
      - cluster-kube-apiserver-operator
      - installer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: installer
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
      - mountPath: /var/lock
        name: var-lock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tckxz
    nodeName: ip-10-0-21-63.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - hostPath:
        path: /var/lock
        type: ""
      name: var-lock
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:46:10Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:46:49Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:46:49Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:46:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f38e1066b696c368593f4a5a48d24c23a1f658634b282fdd610581ed73ce1261
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: installer
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://f38e1066b696c368593f4a5a48d24c23a1f658634b282fdd610581ed73ce1261
          exitCode: 0
          finishedAt: "2023-12-06T09:46:48Z"
          reason: Completed
          startedAt: "2023-12-06T09:46:11Z"
    hostIP: 10.0.21.63
    phase: Succeeded
    podIP: 10.129.0.89
    podIPs:
    - ip: 10.129.0.89
    qosClass: Guaranteed
    startTime: "2023-12-06T09:46:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.49/23"],"mac_address":"0a:58:0a:82:00:31","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.49/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.49"
            ],
            "mac": "0a:58:0a:82:00:31",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:50:05Z"
    labels:
      app: installer
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"648ee445-d00c-452c-aa2e-30c214e15db0"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"installer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lock"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lock"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:50:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-94-160
      operation: Update
      subresource: status
      time: "2023-12-06T09:50:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:50:06Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.49"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:50:46Z"
    name: installer-9-ip-10-0-94-160.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-9
      uid: 648ee445-d00c-452c-aa2e-30c214e15db0
    resourceVersion: "42506"
    uid: 4026a9aa-cba8-4361-9e70-b7e61a7263bf
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=2
      - --revision=9
      - --namespace=openshift-kube-apiserver
      - --pod=kube-apiserver-pod
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --pod-manifest-dir=/etc/kubernetes/manifests
      - --configmaps=kube-apiserver-pod
      - --configmaps=config
      - --configmaps=kube-apiserver-cert-syncer-kubeconfig
      - --optional-configmaps=oauth-metadata
      - --optional-configmaps=cloud-config
      - --configmaps=bound-sa-token-signing-certs
      - --configmaps=etcd-serving-ca
      - --optional-configmaps=kube-apiserver-server-ca
      - --configmaps=kubelet-serving-ca
      - --configmaps=sa-token-signing-certs
      - --configmaps=kube-apiserver-audit-policies
      - --secrets=etcd-client
      - --optional-secrets=encryption-config
      - --secrets=localhost-recovery-serving-certkey
      - --secrets=localhost-recovery-client-token
      - --optional-secrets=webhook-authenticator
      - --cert-dir=/etc/kubernetes/static-pod-resources/kube-apiserver-certs
      - --cert-configmaps=aggregator-client-ca
      - --cert-configmaps=client-ca
      - --optional-cert-configmaps=trusted-ca-bundle
      - --cert-configmaps=control-plane-node-kubeconfig
      - --cert-configmaps=check-endpoints-kubeconfig
      - --cert-secrets=aggregator-client
      - --cert-secrets=localhost-serving-cert-certkey
      - --cert-secrets=service-network-serving-certkey
      - --cert-secrets=external-loadbalancer-serving-certkey
      - --cert-secrets=internal-loadbalancer-serving-certkey
      - --cert-secrets=bound-service-account-signing-key
      - --cert-secrets=control-plane-node-admin-client-cert-key
      - --cert-secrets=check-endpoints-client-cert-key
      - --cert-secrets=kubelet-client
      - --cert-secrets=node-kubeconfigs
      - --optional-cert-secrets=user-serving-cert
      - --optional-cert-secrets=user-serving-cert-000
      - --optional-cert-secrets=user-serving-cert-001
      - --optional-cert-secrets=user-serving-cert-002
      - --optional-cert-secrets=user-serving-cert-003
      - --optional-cert-secrets=user-serving-cert-004
      - --optional-cert-secrets=user-serving-cert-005
      - --optional-cert-secrets=user-serving-cert-006
      - --optional-cert-secrets=user-serving-cert-007
      - --optional-cert-secrets=user-serving-cert-008
      - --optional-cert-secrets=user-serving-cert-009
      command:
      - cluster-kube-apiserver-operator
      - installer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: installer
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
      - mountPath: /var/lock
        name: var-lock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tckxz
    nodeName: ip-10-0-94-160.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - hostPath:
        path: /var/lock
        type: ""
      name: var-lock
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:50:05Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:50:44Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:50:44Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:50:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://2b98f07a7dd540dbad5533f424f003b9c8ef9371fa6841e13f36d9fda32a55dc
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: installer
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://2b98f07a7dd540dbad5533f424f003b9c8ef9371fa6841e13f36d9fda32a55dc
          exitCode: 0
          finishedAt: "2023-12-06T09:50:44Z"
          reason: Completed
          startedAt: "2023-12-06T09:50:06Z"
    hostIP: 10.0.94.160
    phase: Succeeded
    podIP: 10.130.0.49
    podIPs:
    - ip: 10.130.0.49
    qosClass: Guaranteed
    startTime: "2023-12-06T09:50:05Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.27/23"],"mac_address":"0a:58:0a:80:00:1b","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.27/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.27"
            ],
            "mac": "0a:58:0a:80:00:1b",
            "default": true,
            "dns": {}
        }]
      target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
    creationTimestamp: "2023-12-06T09:25:00Z"
    labels:
      app: guard
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-106-212
      operation: Update
      subresource: status
      time: "2023-12-06T09:25:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:25:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:containers:
            k:{"name":"guard"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:25:06Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.27"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:45:15Z"
    name: kube-apiserver-guard-ip-10-0-106-212.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    resourceVersion: "39156"
    uid: 8cee0506-4ba3-4dc7-82f3-2a5acdda6d91
  spec:
    containers:
    - args:
      - -c
      - |
        # properly handle TERM and exit as soon as it is signaled
        set -euo pipefail
        trap 'jobs -p | xargs -r kill; exit 0' TERM
        sleep infinity & wait
      command:
      - /bin/bash
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: guard
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 10.0.106.212
          path: readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 5Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-92w9d
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: guard-0671df5de8197590191f179cade6306ff7b6b9e0-end
    imagePullSecrets:
    - name: default-dockercfg-cswfl
    nodeName: ip-10-0-106-212.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 3
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/etcd
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-92w9d
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:45:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:45:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://81d1e8891b5af23df16a5f4e34f2ce56a76ace8c9e7d2ba661936147d7cc75ca
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: guard
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:25:01Z"
    hostIP: 10.0.106.212
    phase: Running
    podIP: 10.128.0.27
    podIPs:
    - ip: 10.128.0.27
    qosClass: Burstable
    startTime: "2023-12-06T09:25:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.75/23"],"mac_address":"0a:58:0a:81:00:4b","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.75/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.75"
            ],
            "mac": "0a:58:0a:81:00:4b",
            "default": true,
            "dns": {}
        }]
      target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
    creationTimestamp: "2023-12-06T09:27:34Z"
    labels:
      app: guard
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-21-63
      operation: Update
      subresource: status
      time: "2023-12-06T09:27:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:27:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:containers:
            k:{"name":"guard"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:27:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.75"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:49:10Z"
    name: kube-apiserver-guard-ip-10-0-21-63.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    resourceVersion: "41555"
    uid: 7df6aea3-12fd-47a9-b8f5-ab2ed256c672
  spec:
    containers:
    - args:
      - -c
      - |
        # properly handle TERM and exit as soon as it is signaled
        set -euo pipefail
        trap 'jobs -p | xargs -r kill; exit 0' TERM
        sleep infinity & wait
      command:
      - /bin/bash
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: guard
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 10.0.21.63
          path: readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 5Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dbflg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: guard-e84db11f9a8db1624460ee99d5a4b7522a76f435-end
    imagePullSecrets:
    - name: default-dockercfg-cswfl
    nodeName: ip-10-0-21-63.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 3
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/etcd
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-dbflg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:27:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:49:10Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:49:10Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:27:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://a3180c19d427f59631f2b541ab22467d701aab1169a6e2348e78979f824babd4
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: guard
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:27:35Z"
    hostIP: 10.0.21.63
    phase: Running
    podIP: 10.129.0.75
    podIPs:
    - ip: 10.129.0.75
    qosClass: Burstable
    startTime: "2023-12-06T09:27:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.35/23"],"mac_address":"0a:58:0a:82:00:23","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.35/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.35"
            ],
            "mac": "0a:58:0a:82:00:23",
            "default": true,
            "dns": {}
        }]
      target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
    creationTimestamp: "2023-12-06T09:29:07Z"
    labels:
      app: guard
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-94-160
      operation: Update
      subresource: status
      time: "2023-12-06T09:29:07Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:29:07Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:labels:
            .: {}
            f:app: {}
        f:spec:
          f:containers:
            k:{"name":"guard"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:host: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:29:14Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.35"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:53:12Z"
    name: kube-apiserver-guard-ip-10-0-94-160.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    resourceVersion: "44011"
    uid: e906dcc9-7b05-4261-a4c0-267976f406a3
  spec:
    containers:
    - args:
      - -c
      - |
        # properly handle TERM and exit as soon as it is signaled
        set -euo pipefail
        trap 'jobs -p | xargs -r kill; exit 0' TERM
        sleep infinity & wait
      command:
      - /bin/bash
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: guard
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 10.0.94.160
          path: readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 5Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h5bwr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: guard-a2ee17d3a872ae9045d2c2c3613781d81c7c3971-end
    imagePullSecrets:
    - name: default-dockercfg-cswfl
    nodeName: ip-10-0-94-160.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 3
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/etcd
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-h5bwr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:29:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:53:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:53:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:29:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://34725d14b1d99cdc0df968693a57bb0475196ebc23b8ac4884ebc11149f4fd86
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: guard
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:29:08Z"
    hostIP: 10.0.94.160
    phase: Running
    podIP: 10.130.0.35
    podIPs:
    - ip: 10.130.0.35
    qosClass: Burstable
    startTime: "2023-12-06T09:29:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: kube-apiserver
      kubernetes.io/config.hash: eb2ad82b8e1f4816142e791bc782e40b
      kubernetes.io/config.mirror: eb2ad82b8e1f4816142e791bc782e40b
      kubernetes.io/config.seen: "2023-12-06T09:42:50.611905204Z"
      kubernetes.io/config.source: file
      target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
    creationTimestamp: "2023-12-06T09:45:07Z"
    labels:
      apiserver: "true"
      app: openshift-kube-apiserver
      revision: "9"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:kubernetes.io/config.hash: {}
            f:kubernetes.io/config.mirror: {}
            f:kubernetes.io/config.seen: {}
            f:kubernetes.io/config.source: {}
            f:target.workload.openshift.io/management: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1c607fab-4c83-498b-82e7-14c991b2fa80"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-apiserver"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"GOGC"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HOST_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"STATIC_POD_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:startupProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/kube-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-cert-regeneration-controller"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-cert-syncer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-check-endpoints"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":17697,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-insecure-readyz"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"setup"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/kube-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"audit-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"cert-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"resource-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kubelet
      operation: Update
      time: "2023-12-06T09:45:07Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.106.212"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:45:27Z"
    name: kube-apiserver-ip-10-0-106-212.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: ip-10-0-106-212.us-west-1.compute.internal
      uid: 1c607fab-4c83-498b-82e7-14c991b2fa80
    resourceVersion: "39256"
    uid: 32bbf6b6-b72b-4f2d-83bc-a63914a11c9a
  spec:
    containers:
    - args:
      - |
        LOCK=/var/log/kube-apiserver/.lock
        # We should be able to acquire the lock immediatelly. If not, it means the init container has not released it yet and kubelet or CRI-O started container prematurely.
        exec {LOCK_FD}>${LOCK} && flock --verbose -w 30 "${LOCK_FD}" || {
          echo "Failed to acquire lock for kube-apiserver. Please check setup container for details. This is likely kubelet or CRI-O bug."
          exit 1
        }
        if [ -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt ]; then
          echo "Copying system trust bundle ..."
          cp -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
        fi

        exec watch-termination --termination-touch-file=/var/log/kube-apiserver/.terminating --termination-log-file=/var/log/kube-apiserver/termination.log --graceful-termination-duration=194s --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig -- hyperkube kube-apiserver --openshift-config=/etc/kubernetes/static-pod-resources/configmaps/config/config.yaml --advertise-address=${HOST_IP}  -v=2 --permit-address-sharing
      command:
      - /bin/bash
      - -ec
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: STATIC_POD_VERSION
        value: "9"
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: GOGC
        value: "100"
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c7976e17396681de12993cb44704f01b2fa08b0b24b5f651b4d69dd4b43873f9
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: livez
          port: 6443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: kube-apiserver
      ports:
      - containerPort: 6443
        hostPort: 6443
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 265m
          memory: 1Gi
      securityContext:
        privileged: true
      startupProbe:
        failureThreshold: 30
        httpGet:
          path: healthz
          port: 6443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
      - mountPath: /var/log/kube-apiserver
        name: audit-dir
    - args:
      - --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig
      - --namespace=$(POD_NAMESPACE)
      - --destination-dir=/etc/kubernetes/static-pod-certs
      command:
      - cluster-kube-apiserver-operator
      - cert-syncer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-cert-syncer
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
    - args:
      - --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig
      - --namespace=$(POD_NAMESPACE)
      - -v=2
      command:
      - cluster-kube-apiserver-operator
      - cert-regeneration-controller
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-cert-regeneration-controller
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
    - args:
      - --insecure-port=6080
      - --delegate-url=https://localhost:6443/readyz
      command:
      - cluster-kube-apiserver-operator
      - insecure-readyz
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-insecure-readyz
      ports:
      - containerPort: 6080
        hostPort: 6080
        protocol: TCP
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
    - args:
      - --kubeconfig
      - /etc/kubernetes/static-pod-certs/configmaps/check-endpoints-kubeconfig/kubeconfig
      - --listen
      - 0.0.0.0:17697
      - --namespace
      - $(POD_NAMESPACE)
      - --v
      - "2"
      command:
      - cluster-kube-apiserver-operator
      - check-endpoints
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 17697
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: kube-apiserver-check-endpoints
      ports:
      - containerPort: 17697
        hostPort: 17697
        name: check-endpoints
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 17697
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - args:
      - |
        echo "Fixing audit permissions ..."
        chmod 0700 /var/log/kube-apiserver && touch /var/log/kube-apiserver/audit.log && chmod 0600 /var/log/kube-apiserver/*

        LOCK=/var/log/kube-apiserver/.lock
        echo "Acquiring exclusive lock ${LOCK} ..."

        # Waiting for 194s max for old kube-apiserver's watch-termination process to exit and remove the lock.
        # Two cases:
        # 1. if kubelet does not start the old and new in parallel (i.e. works as expected), the flock will always succeed without any time.
        # 2. if kubelet does overlap old and new pods for up to 130s, the flock will wait and immediate return when the old finishes.
        #
        # NOTE: We can increase 194s for a bigger expected overlap. But a higher value means less noise about the broken kubelet behaviour, i.e. we hide a bug.
        # NOTE: Do not tweak these timings without considering the livenessProbe initialDelaySeconds
        exec {LOCK_FD}>${LOCK} && flock --verbose -w 194 "${LOCK_FD}" || {
          echo "$(date -Iseconds -u) kubelet did not terminate old kube-apiserver before new one" >> /var/log/kube-apiserver/lock.log
          echo -n ": WARNING: kubelet did not terminate old kube-apiserver before new one."

          # We failed to acquire exclusive lock, which means there is old kube-apiserver running in system.
          # Since we utilize SO_REUSEPORT, we need to make sure the old kube-apiserver stopped listening.
          #
          # NOTE: This is a fallback for broken kubelet, if you observe this please report a bug.
          echo -n "Waiting for port 6443 to be released due to likely bug in kubelet or CRI-O "
          while [ -n "$(ss -Htan state listening '( sport = 6443 or sport = 6080 )')" ]; do
            echo -n "."
            sleep 1
            (( tries += 1 ))
            if [[ "${tries}" -gt 10 ]]; then
              echo "Timed out waiting for port :6443 and :6080 to be released, this is likely a bug in kubelet or CRI-O"
              exit 1
            fi
          done
          #  This is to make sure the server has terminated independently from the lock.
          #  After the port has been freed (requests can be pending and need 60s max).
          sleep 65
        }
        # We cannot hold the lock from the init container to the main container. We release it here. There is no risk, at this point we know we are safe.
        flock -u "${LOCK_FD}"
      command:
      - /usr/bin/timeout
      - "279"
      - /bin/bash
      - -ec
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c7976e17396681de12993cb44704f01b2fa08b0b24b5f651b4d69dd4b43873f9
      imagePullPolicy: IfNotPresent
      name: setup
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/log/kube-apiserver
        name: audit-dir
    nodeName: ip-10-0-106-212.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 194
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/static-pod-resources/kube-apiserver-pod-9
        type: ""
      name: resource-dir
    - hostPath:
        path: /etc/kubernetes/static-pod-resources/kube-apiserver-certs
        type: ""
      name: cert-dir
    - hostPath:
        path: /var/log/kube-apiserver
        type: ""
      name: audit-dir
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:45:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:45:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:45:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:24:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://5eb53c9c92522c37a61e8acca6bfb93a99a83ce44634bb11a38e3423fc70b2c0
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c7976e17396681de12993cb44704f01b2fa08b0b24b5f651b4d69dd4b43873f9
      imageID: b589e6808137f64892a3b76f838d9245e09e05cb0eb966e0fd01579145714241
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:45:07Z"
    - containerID: cri-o://bb0c94c087f09d981a6f9aa7d6e3742b3b8214daf22552cb205069d57e10d277
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: kube-apiserver-cert-regeneration-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:45:07Z"
    - containerID: cri-o://8e80996342e8adc17b00e04499168c0542ba5d0c59982add53a4ca2d506e2e10
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: kube-apiserver-cert-syncer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:45:07Z"
    - containerID: cri-o://f4f64b8bf0ff04c52a529e85632de6c72fad91f5e0e4c411d907d437518d0975
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: kube-apiserver-check-endpoints
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:45:08Z"
    - containerID: cri-o://14a9bf215e3b6adc48dbb2ae2f6391048f92ce9cb00453d596865711a390dae0
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: kube-apiserver-insecure-readyz
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:45:07Z"
    hostIP: 10.0.106.212
    initContainerStatuses:
    - containerID: cri-o://d6d69117013bf575e1bf34c28e4b73769b654274d0f87194d905664973951473
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c7976e17396681de12993cb44704f01b2fa08b0b24b5f651b4d69dd4b43873f9
      imageID: b589e6808137f64892a3b76f838d9245e09e05cb0eb966e0fd01579145714241
      lastState: {}
      name: setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://d6d69117013bf575e1bf34c28e4b73769b654274d0f87194d905664973951473
          exitCode: 0
          finishedAt: "2023-12-06T09:45:07Z"
          reason: Completed
          startedAt: "2023-12-06T09:45:07Z"
    phase: Running
    podIP: 10.0.106.212
    podIPs:
    - ip: 10.0.106.212
    qosClass: Burstable
    startTime: "2023-12-06T09:24:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: kube-apiserver
      kubernetes.io/config.hash: 771dcdcc2ffdc37a0141113de89bf2a4
      kubernetes.io/config.mirror: 771dcdcc2ffdc37a0141113de89bf2a4
      kubernetes.io/config.seen: "2023-12-06T09:46:48.568702096Z"
      kubernetes.io/config.source: file
      target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
    creationTimestamp: "2023-12-06T09:49:03Z"
    labels:
      apiserver: "true"
      app: openshift-kube-apiserver
      revision: "9"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:kubernetes.io/config.hash: {}
            f:kubernetes.io/config.mirror: {}
            f:kubernetes.io/config.seen: {}
            f:kubernetes.io/config.source: {}
            f:target.workload.openshift.io/management: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"16e2d09d-2040-4a5a-885f-5beac4c0785a"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-apiserver"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"GOGC"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HOST_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"STATIC_POD_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:startupProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/kube-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-cert-regeneration-controller"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-cert-syncer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-check-endpoints"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":17697,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-insecure-readyz"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"setup"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/kube-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"audit-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"cert-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"resource-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kubelet
      operation: Update
      time: "2023-12-06T09:49:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.21.63"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:49:23Z"
    name: kube-apiserver-ip-10-0-21-63.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: ip-10-0-21-63.us-west-1.compute.internal
      uid: 16e2d09d-2040-4a5a-885f-5beac4c0785a
    resourceVersion: "41661"
    uid: a751079a-d760-40fd-a3fe-3aaedb4ae3dd
  spec:
    containers:
    - args:
      - |
        LOCK=/var/log/kube-apiserver/.lock
        # We should be able to acquire the lock immediatelly. If not, it means the init container has not released it yet and kubelet or CRI-O started container prematurely.
        exec {LOCK_FD}>${LOCK} && flock --verbose -w 30 "${LOCK_FD}" || {
          echo "Failed to acquire lock for kube-apiserver. Please check setup container for details. This is likely kubelet or CRI-O bug."
          exit 1
        }
        if [ -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt ]; then
          echo "Copying system trust bundle ..."
          cp -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
        fi

        exec watch-termination --termination-touch-file=/var/log/kube-apiserver/.terminating --termination-log-file=/var/log/kube-apiserver/termination.log --graceful-termination-duration=194s --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig -- hyperkube kube-apiserver --openshift-config=/etc/kubernetes/static-pod-resources/configmaps/config/config.yaml --advertise-address=${HOST_IP}  -v=2 --permit-address-sharing
      command:
      - /bin/bash
      - -ec
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: STATIC_POD_VERSION
        value: "9"
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: GOGC
        value: "100"
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c7976e17396681de12993cb44704f01b2fa08b0b24b5f651b4d69dd4b43873f9
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: livez
          port: 6443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: kube-apiserver
      ports:
      - containerPort: 6443
        hostPort: 6443
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 265m
          memory: 1Gi
      securityContext:
        privileged: true
      startupProbe:
        failureThreshold: 30
        httpGet:
          path: healthz
          port: 6443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
      - mountPath: /var/log/kube-apiserver
        name: audit-dir
    - args:
      - --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig
      - --namespace=$(POD_NAMESPACE)
      - --destination-dir=/etc/kubernetes/static-pod-certs
      command:
      - cluster-kube-apiserver-operator
      - cert-syncer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-cert-syncer
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
    - args:
      - --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig
      - --namespace=$(POD_NAMESPACE)
      - -v=2
      command:
      - cluster-kube-apiserver-operator
      - cert-regeneration-controller
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-cert-regeneration-controller
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
    - args:
      - --insecure-port=6080
      - --delegate-url=https://localhost:6443/readyz
      command:
      - cluster-kube-apiserver-operator
      - insecure-readyz
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-insecure-readyz
      ports:
      - containerPort: 6080
        hostPort: 6080
        protocol: TCP
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
    - args:
      - --kubeconfig
      - /etc/kubernetes/static-pod-certs/configmaps/check-endpoints-kubeconfig/kubeconfig
      - --listen
      - 0.0.0.0:17697
      - --namespace
      - $(POD_NAMESPACE)
      - --v
      - "2"
      command:
      - cluster-kube-apiserver-operator
      - check-endpoints
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 17697
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: kube-apiserver-check-endpoints
      ports:
      - containerPort: 17697
        hostPort: 17697
        name: check-endpoints
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 17697
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - args:
      - |
        echo "Fixing audit permissions ..."
        chmod 0700 /var/log/kube-apiserver && touch /var/log/kube-apiserver/audit.log && chmod 0600 /var/log/kube-apiserver/*

        LOCK=/var/log/kube-apiserver/.lock
        echo "Acquiring exclusive lock ${LOCK} ..."

        # Waiting for 194s max for old kube-apiserver's watch-termination process to exit and remove the lock.
        # Two cases:
        # 1. if kubelet does not start the old and new in parallel (i.e. works as expected), the flock will always succeed without any time.
        # 2. if kubelet does overlap old and new pods for up to 130s, the flock will wait and immediate return when the old finishes.
        #
        # NOTE: We can increase 194s for a bigger expected overlap. But a higher value means less noise about the broken kubelet behaviour, i.e. we hide a bug.
        # NOTE: Do not tweak these timings without considering the livenessProbe initialDelaySeconds
        exec {LOCK_FD}>${LOCK} && flock --verbose -w 194 "${LOCK_FD}" || {
          echo "$(date -Iseconds -u) kubelet did not terminate old kube-apiserver before new one" >> /var/log/kube-apiserver/lock.log
          echo -n ": WARNING: kubelet did not terminate old kube-apiserver before new one."

          # We failed to acquire exclusive lock, which means there is old kube-apiserver running in system.
          # Since we utilize SO_REUSEPORT, we need to make sure the old kube-apiserver stopped listening.
          #
          # NOTE: This is a fallback for broken kubelet, if you observe this please report a bug.
          echo -n "Waiting for port 6443 to be released due to likely bug in kubelet or CRI-O "
          while [ -n "$(ss -Htan state listening '( sport = 6443 or sport = 6080 )')" ]; do
            echo -n "."
            sleep 1
            (( tries += 1 ))
            if [[ "${tries}" -gt 10 ]]; then
              echo "Timed out waiting for port :6443 and :6080 to be released, this is likely a bug in kubelet or CRI-O"
              exit 1
            fi
          done
          #  This is to make sure the server has terminated independently from the lock.
          #  After the port has been freed (requests can be pending and need 60s max).
          sleep 65
        }
        # We cannot hold the lock from the init container to the main container. We release it here. There is no risk, at this point we know we are safe.
        flock -u "${LOCK_FD}"
      command:
      - /usr/bin/timeout
      - "279"
      - /bin/bash
      - -ec
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c7976e17396681de12993cb44704f01b2fa08b0b24b5f651b4d69dd4b43873f9
      imagePullPolicy: IfNotPresent
      name: setup
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/log/kube-apiserver
        name: audit-dir
    nodeName: ip-10-0-21-63.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 194
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/static-pod-resources/kube-apiserver-pod-9
        type: ""
      name: resource-dir
    - hostPath:
        path: /etc/kubernetes/static-pod-resources/kube-apiserver-certs
        type: ""
      name: cert-dir
    - hostPath:
        path: /var/log/kube-apiserver
        type: ""
      name: audit-dir
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:49:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:49:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:49:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:27:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://3204b20ac3fc13379cb979e4007505c4cd2322c16e6bcfb7e7b4c07307e7c706
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c7976e17396681de12993cb44704f01b2fa08b0b24b5f651b4d69dd4b43873f9
      imageID: b589e6808137f64892a3b76f838d9245e09e05cb0eb966e0fd01579145714241
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:49:03Z"
    - containerID: cri-o://05d734a5cd7a0dfcb22693c372485a8fd0a1f74cb5484e2452650cf3785c26bd
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: kube-apiserver-cert-regeneration-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:49:04Z"
    - containerID: cri-o://e0c677a23041412a605d6bbda056df21825d5266e72ffd55425c21104b1b4eac
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: kube-apiserver-cert-syncer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:49:04Z"
    - containerID: cri-o://15618806b5336baf4a33c79aa5f7a4635454abc0fd2123100596e90ed3d3cf03
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: kube-apiserver-check-endpoints
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:49:04Z"
    - containerID: cri-o://4cf25fb3c29893b0ecf9f4c67672ffcfdc908ecd239c92eb58454e36747e5de9
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: kube-apiserver-insecure-readyz
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:49:04Z"
    hostIP: 10.0.21.63
    initContainerStatuses:
    - containerID: cri-o://b5b3b8e83c42391cd6962562105bf1679dfe7eed0194cfa74968200989f1c95b
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c7976e17396681de12993cb44704f01b2fa08b0b24b5f651b4d69dd4b43873f9
      imageID: b589e6808137f64892a3b76f838d9245e09e05cb0eb966e0fd01579145714241
      lastState: {}
      name: setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://b5b3b8e83c42391cd6962562105bf1679dfe7eed0194cfa74968200989f1c95b
          exitCode: 0
          finishedAt: "2023-12-06T09:49:03Z"
          reason: Completed
          startedAt: "2023-12-06T09:49:03Z"
    phase: Running
    podIP: 10.0.21.63
    podIPs:
    - ip: 10.0.21.63
    qosClass: Burstable
    startTime: "2023-12-06T09:27:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: kube-apiserver
      kubernetes.io/config.hash: e267d72fdb7f932f1a260c914109e539
      kubernetes.io/config.mirror: e267d72fdb7f932f1a260c914109e539
      kubernetes.io/config.seen: "2023-12-06T09:50:43.842439660Z"
      kubernetes.io/config.source: file
      target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
    creationTimestamp: "2023-12-06T09:53:07Z"
    labels:
      apiserver: "true"
      app: openshift-kube-apiserver
      revision: "9"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:kubernetes.io/config.hash: {}
            f:kubernetes.io/config.mirror: {}
            f:kubernetes.io/config.seen: {}
            f:kubernetes.io/config.source: {}
            f:target.workload.openshift.io/management: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"81ba1bea-e6f4-4738-856a-3956136a61ac"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-apiserver"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"GOGC"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HOST_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"STATIC_POD_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:startupProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/kube-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-cert-regeneration-controller"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-cert-syncer"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-check-endpoints"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":17697,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/kubernetes/static-pod-resources"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-apiserver-insecure-readyz"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"setup"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/kube-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"audit-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"cert-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"resource-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kubelet
      operation: Update
      time: "2023-12-06T09:53:07Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.94.160"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:53:27Z"
    name: kube-apiserver-ip-10-0-94-160.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: ip-10-0-94-160.us-west-1.compute.internal
      uid: 81ba1bea-e6f4-4738-856a-3956136a61ac
    resourceVersion: "44169"
    uid: 30524abb-4f69-47b4-bc29-af4d33b1c40b
  spec:
    containers:
    - args:
      - |
        LOCK=/var/log/kube-apiserver/.lock
        # We should be able to acquire the lock immediatelly. If not, it means the init container has not released it yet and kubelet or CRI-O started container prematurely.
        exec {LOCK_FD}>${LOCK} && flock --verbose -w 30 "${LOCK_FD}" || {
          echo "Failed to acquire lock for kube-apiserver. Please check setup container for details. This is likely kubelet or CRI-O bug."
          exit 1
        }
        if [ -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt ]; then
          echo "Copying system trust bundle ..."
          cp -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
        fi

        exec watch-termination --termination-touch-file=/var/log/kube-apiserver/.terminating --termination-log-file=/var/log/kube-apiserver/termination.log --graceful-termination-duration=194s --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig -- hyperkube kube-apiserver --openshift-config=/etc/kubernetes/static-pod-resources/configmaps/config/config.yaml --advertise-address=${HOST_IP}  -v=2 --permit-address-sharing
      command:
      - /bin/bash
      - -ec
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: STATIC_POD_VERSION
        value: "9"
      - name: HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: GOGC
        value: "100"
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c7976e17396681de12993cb44704f01b2fa08b0b24b5f651b4d69dd4b43873f9
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: livez
          port: 6443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: kube-apiserver
      ports:
      - containerPort: 6443
        hostPort: 6443
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 265m
          memory: 1Gi
      securityContext:
        privileged: true
      startupProbe:
        failureThreshold: 30
        httpGet:
          path: healthz
          port: 6443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
      - mountPath: /var/log/kube-apiserver
        name: audit-dir
    - args:
      - --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig
      - --namespace=$(POD_NAMESPACE)
      - --destination-dir=/etc/kubernetes/static-pod-certs
      command:
      - cluster-kube-apiserver-operator
      - cert-syncer
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-cert-syncer
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
    - args:
      - --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig
      - --namespace=$(POD_NAMESPACE)
      - -v=2
      command:
      - cluster-kube-apiserver-operator
      - cert-regeneration-controller
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-cert-regeneration-controller
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
    - args:
      - --insecure-port=6080
      - --delegate-url=https://localhost:6443/readyz
      command:
      - cluster-kube-apiserver-operator
      - insecure-readyz
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: kube-apiserver-insecure-readyz
      ports:
      - containerPort: 6080
        hostPort: 6080
        protocol: TCP
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
    - args:
      - --kubeconfig
      - /etc/kubernetes/static-pod-certs/configmaps/check-endpoints-kubeconfig/kubeconfig
      - --listen
      - 0.0.0.0:17697
      - --namespace
      - $(POD_NAMESPACE)
      - --v
      - "2"
      command:
      - cluster-kube-apiserver-operator
      - check-endpoints
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 17697
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: kube-apiserver-check-endpoints
      ports:
      - containerPort: 17697
        hostPort: 17697
        name: check-endpoints
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 17697
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/static-pod-resources
        name: resource-dir
      - mountPath: /etc/kubernetes/static-pod-certs
        name: cert-dir
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - args:
      - |
        echo "Fixing audit permissions ..."
        chmod 0700 /var/log/kube-apiserver && touch /var/log/kube-apiserver/audit.log && chmod 0600 /var/log/kube-apiserver/*

        LOCK=/var/log/kube-apiserver/.lock
        echo "Acquiring exclusive lock ${LOCK} ..."

        # Waiting for 194s max for old kube-apiserver's watch-termination process to exit and remove the lock.
        # Two cases:
        # 1. if kubelet does not start the old and new in parallel (i.e. works as expected), the flock will always succeed without any time.
        # 2. if kubelet does overlap old and new pods for up to 130s, the flock will wait and immediate return when the old finishes.
        #
        # NOTE: We can increase 194s for a bigger expected overlap. But a higher value means less noise about the broken kubelet behaviour, i.e. we hide a bug.
        # NOTE: Do not tweak these timings without considering the livenessProbe initialDelaySeconds
        exec {LOCK_FD}>${LOCK} && flock --verbose -w 194 "${LOCK_FD}" || {
          echo "$(date -Iseconds -u) kubelet did not terminate old kube-apiserver before new one" >> /var/log/kube-apiserver/lock.log
          echo -n ": WARNING: kubelet did not terminate old kube-apiserver before new one."

          # We failed to acquire exclusive lock, which means there is old kube-apiserver running in system.
          # Since we utilize SO_REUSEPORT, we need to make sure the old kube-apiserver stopped listening.
          #
          # NOTE: This is a fallback for broken kubelet, if you observe this please report a bug.
          echo -n "Waiting for port 6443 to be released due to likely bug in kubelet or CRI-O "
          while [ -n "$(ss -Htan state listening '( sport = 6443 or sport = 6080 )')" ]; do
            echo -n "."
            sleep 1
            (( tries += 1 ))
            if [[ "${tries}" -gt 10 ]]; then
              echo "Timed out waiting for port :6443 and :6080 to be released, this is likely a bug in kubelet or CRI-O"
              exit 1
            fi
          done
          #  This is to make sure the server has terminated independently from the lock.
          #  After the port has been freed (requests can be pending and need 60s max).
          sleep 65
        }
        # We cannot hold the lock from the init container to the main container. We release it here. There is no risk, at this point we know we are safe.
        flock -u "${LOCK_FD}"
      command:
      - /usr/bin/timeout
      - "279"
      - /bin/bash
      - -ec
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c7976e17396681de12993cb44704f01b2fa08b0b24b5f651b4d69dd4b43873f9
      imagePullPolicy: IfNotPresent
      name: setup
      resources:
        requests:
          cpu: 5m
          memory: 50Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/log/kube-apiserver
        name: audit-dir
    nodeName: ip-10-0-94-160.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    terminationGracePeriodSeconds: 194
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/static-pod-resources/kube-apiserver-pod-9
        type: ""
      name: resource-dir
    - hostPath:
        path: /etc/kubernetes/static-pod-resources/kube-apiserver-certs
        type: ""
      name: cert-dir
    - hostPath:
        path: /var/log/kube-apiserver
        type: ""
      name: audit-dir
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:53:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:53:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:53:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:28:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://12d3f19613ddda2cabf4cfdcee1646fff157c3ba0091b6c5f4662e3711e9687a
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c7976e17396681de12993cb44704f01b2fa08b0b24b5f651b4d69dd4b43873f9
      imageID: b589e6808137f64892a3b76f838d9245e09e05cb0eb966e0fd01579145714241
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:53:08Z"
    - containerID: cri-o://643d5e24f11d215927e6ba6fcf5947cb601e4a3a14c767b4d9f8e02f86c4e4c0
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: kube-apiserver-cert-regeneration-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:53:09Z"
    - containerID: cri-o://b733b110425d590bd905e97cf7a7798b7f93c20da61fd328870d61d85711f037
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: kube-apiserver-cert-syncer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:53:09Z"
    - containerID: cri-o://8f34feb9ccc3f75e4ee8cd437d19a1257f128c977eee4525643e09855d91e172
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: kube-apiserver-check-endpoints
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:53:09Z"
    - containerID: cri-o://94ec585d11461427cbde7eb4a8b51e258ecbcb1d39a70b562fc6c38294be50a7
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: kube-apiserver-insecure-readyz
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:53:09Z"
    hostIP: 10.0.94.160
    initContainerStatuses:
    - containerID: cri-o://731c7c2a3a73da4b75e44c888e4ff286d9c8cf231f32167edf12d0fa877e0a18
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c7976e17396681de12993cb44704f01b2fa08b0b24b5f651b4d69dd4b43873f9
      imageID: b589e6808137f64892a3b76f838d9245e09e05cb0eb966e0fd01579145714241
      lastState: {}
      name: setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://731c7c2a3a73da4b75e44c888e4ff286d9c8cf231f32167edf12d0fa877e0a18
          exitCode: 0
          finishedAt: "2023-12-06T09:53:07Z"
          reason: Completed
          startedAt: "2023-12-06T09:53:07Z"
    phase: Running
    podIP: 10.0.94.160
    podIPs:
    - ip: 10.0.94.160
    qosClass: Burstable
    startTime: "2023-12-06T09:28:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.67/23"],"mac_address":"0a:58:0a:80:00:43","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.67/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.67"
            ],
            "mac": "0a:58:0a:80:00:43",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:57:50Z"
    labels:
      app: pruner
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7bb54de9-b003-4001-a1f5-87b5882270b7"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"pruner"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:57:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-106-212
      operation: Update
      subresource: status
      time: "2023-12-06T09:57:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:57:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.67"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:57:54Z"
    name: revision-pruner-10-ip-10-0-106-212.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-10
      uid: 7bb54de9-b003-4001-a1f5-87b5882270b7
    resourceVersion: "47734"
    uid: 4eaf80f6-4433-4bf2-8ddc-46edbbb5643a
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=4
      - --max-eligible-revision=10
      - --protected-revisions=5,6,7,8,9,10
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --cert-dir=kube-apiserver-certs
      - --static-pod-name=kube-apiserver-pod
      command:
      - cluster-kube-apiserver-operator
      - prune
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: pruner
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tckxz
    nodeName: ip-10-0-106-212.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:57:50Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:57:52Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:57:52Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:57:50Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://2ac79014aa3d34497d519bc76b8973c2d5a315f636371c29a6c085a0089b6bf4
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://2ac79014aa3d34497d519bc76b8973c2d5a315f636371c29a6c085a0089b6bf4
          exitCode: 0
          finishedAt: "2023-12-06T09:57:51Z"
          reason: Completed
          startedAt: "2023-12-06T09:57:51Z"
    hostIP: 10.0.106.212
    phase: Succeeded
    podIP: 10.128.0.67
    podIPs:
    - ip: 10.128.0.67
    qosClass: Guaranteed
    startTime: "2023-12-06T09:57:50Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.92/23"],"mac_address":"0a:58:0a:81:00:5c","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.92/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.92"
            ],
            "mac": "0a:58:0a:81:00:5c",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:57:53Z"
    labels:
      app: pruner
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7bb54de9-b003-4001-a1f5-87b5882270b7"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"pruner"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:57:53Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-21-63
      operation: Update
      subresource: status
      time: "2023-12-06T09:57:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:57:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.92"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:57:57Z"
    name: revision-pruner-10-ip-10-0-21-63.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-10
      uid: 7bb54de9-b003-4001-a1f5-87b5882270b7
    resourceVersion: "47774"
    uid: 9367ec6f-7ab1-440e-8be0-aa47f33cef53
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=4
      - --max-eligible-revision=10
      - --protected-revisions=5,6,7,8,9,10
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --cert-dir=kube-apiserver-certs
      - --static-pod-name=kube-apiserver-pod
      command:
      - cluster-kube-apiserver-operator
      - prune
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: pruner
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tckxz
    nodeName: ip-10-0-21-63.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:57:54Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:57:55Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:57:55Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:57:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://6aae0034738be7a5c712ce864a7e1c34d59c2f291f225a543afb6083e6fb50d5
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://6aae0034738be7a5c712ce864a7e1c34d59c2f291f225a543afb6083e6fb50d5
          exitCode: 0
          finishedAt: "2023-12-06T09:57:55Z"
          reason: Completed
          startedAt: "2023-12-06T09:57:54Z"
    hostIP: 10.0.21.63
    phase: Succeeded
    podIP: 10.129.0.92
    podIPs:
    - ip: 10.129.0.92
    qosClass: Guaranteed
    startTime: "2023-12-06T09:57:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.51/23"],"mac_address":"0a:58:0a:82:00:33","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.51/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.51"
            ],
            "mac": "0a:58:0a:82:00:33",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:57:57Z"
    labels:
      app: pruner
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7bb54de9-b003-4001-a1f5-87b5882270b7"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"pruner"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:57:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-94-160
      operation: Update
      subresource: status
      time: "2023-12-06T09:57:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:57:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.51"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:58:00Z"
    name: revision-pruner-10-ip-10-0-94-160.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-10
      uid: 7bb54de9-b003-4001-a1f5-87b5882270b7
    resourceVersion: "47791"
    uid: e558f095-c5e8-42b4-80c7-27aa50078b85
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=4
      - --max-eligible-revision=10
      - --protected-revisions=5,6,7,8,9,10
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --cert-dir=kube-apiserver-certs
      - --static-pod-name=kube-apiserver-pod
      command:
      - cluster-kube-apiserver-operator
      - prune
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: pruner
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tckxz
    nodeName: ip-10-0-94-160.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:57:57Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:57:57Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:57:57Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:57:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://e7698610bcec92e19ef34e869a87f665c693fd61fa3bb4a5c49c8c63949c1d37
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://e7698610bcec92e19ef34e869a87f665c693fd61fa3bb4a5c49c8c63949c1d37
          exitCode: 0
          finishedAt: "2023-12-06T09:57:58Z"
          reason: Completed
          startedAt: "2023-12-06T09:57:58Z"
    hostIP: 10.0.94.160
    phase: Succeeded
    podIP: 10.130.0.51
    podIPs:
    - ip: 10.130.0.51
    qosClass: Guaranteed
    startTime: "2023-12-06T09:57:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.61/23"],"mac_address":"0a:58:0a:80:00:3d","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.61/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.61"
            ],
            "mac": "0a:58:0a:80:00:3d",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:53:59Z"
    labels:
      app: pruner
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"648ee445-d00c-452c-aa2e-30c214e15db0"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"pruner"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:53:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-106-212
      operation: Update
      subresource: status
      time: "2023-12-06T09:53:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:54:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.61"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:54:03Z"
    name: revision-pruner-9-ip-10-0-106-212.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-9
      uid: 648ee445-d00c-452c-aa2e-30c214e15db0
    resourceVersion: "44578"
    uid: 44dacac3-3a70-4caa-ba6b-0b03636475d0
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=4
      - --max-eligible-revision=9
      - --protected-revisions=5,6,7,8,9
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --cert-dir=kube-apiserver-certs
      - --static-pod-name=kube-apiserver-pod
      command:
      - cluster-kube-apiserver-operator
      - prune
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: pruner
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tckxz
    nodeName: ip-10-0-106-212.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:53:59Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:54:01Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:54:01Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:53:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://ec7c6edae1d115d9083535f9192c167cc8e6622afeb02913207ce57674e027e7
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://ec7c6edae1d115d9083535f9192c167cc8e6622afeb02913207ce57674e027e7
          exitCode: 0
          finishedAt: "2023-12-06T09:54:00Z"
          reason: Completed
          startedAt: "2023-12-06T09:54:00Z"
    hostIP: 10.0.106.212
    phase: Succeeded
    podIP: 10.128.0.61
    podIPs:
    - ip: 10.128.0.61
    qosClass: Guaranteed
    startTime: "2023-12-06T09:53:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.90/23"],"mac_address":"0a:58:0a:81:00:5a","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.90/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.90"
            ],
            "mac": "0a:58:0a:81:00:5a",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:54:02Z"
    labels:
      app: pruner
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"648ee445-d00c-452c-aa2e-30c214e15db0"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"pruner"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:54:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-21-63
      operation: Update
      subresource: status
      time: "2023-12-06T09:54:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:54:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.90"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:54:07Z"
    name: revision-pruner-9-ip-10-0-21-63.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-9
      uid: 648ee445-d00c-452c-aa2e-30c214e15db0
    resourceVersion: "44630"
    uid: ed93f3eb-f15a-49ae-a0f4-fb4af440d35b
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=4
      - --max-eligible-revision=9
      - --protected-revisions=5,6,7,8,9
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --cert-dir=kube-apiserver-certs
      - --static-pod-name=kube-apiserver-pod
      command:
      - cluster-kube-apiserver-operator
      - prune
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: pruner
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tckxz
    nodeName: ip-10-0-21-63.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:54:02Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:54:05Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:54:05Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:54:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://684b4068f1ebcca88444672e14d4a4b8f431098661b68e392143dfddfd33fb67
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://684b4068f1ebcca88444672e14d4a4b8f431098661b68e392143dfddfd33fb67
          exitCode: 0
          finishedAt: "2023-12-06T09:54:04Z"
          reason: Completed
          startedAt: "2023-12-06T09:54:03Z"
    hostIP: 10.0.21.63
    phase: Succeeded
    podIP: 10.129.0.90
    podIPs:
    - ip: 10.129.0.90
    qosClass: Guaranteed
    startTime: "2023-12-06T09:54:02Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.50/23"],"mac_address":"0a:58:0a:82:00:32","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.50/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.50"
            ],
            "mac": "0a:58:0a:82:00:32",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:54:05Z"
    labels:
      app: pruner
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"648ee445-d00c-452c-aa2e-30c214e15db0"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"pruner"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"kube-api-access"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"kubelet-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: cluster-kube-apiserver-operator
      operation: Update
      time: "2023-12-06T09:54:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-94-160
      operation: Update
      subresource: status
      time: "2023-12-06T09:54:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:54:06Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.50"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:54:09Z"
    name: revision-pruner-9-ip-10-0-94-160.us-west-1.compute.internal
    namespace: openshift-kube-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: ConfigMap
      name: revision-status-9
      uid: 648ee445-d00c-452c-aa2e-30c214e15db0
    resourceVersion: "44680"
    uid: b37a1f80-6693-4ef1-8189-e324ce99bde0
  spec:
    automountServiceAccountToken: false
    containers:
    - args:
      - -v=4
      - --max-eligible-revision=9
      - --protected-revisions=5,6,7,8,9
      - --resource-dir=/etc/kubernetes/static-pod-resources
      - --cert-dir=kube-apiserver-certs
      - --static-pod-name=kube-apiserver-pod
      command:
      - cluster-kube-apiserver-operator
      - prune
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imagePullPolicy: IfNotPresent
      name: pruner
      resources:
        limits:
          cpu: 150m
          memory: 200M
        requests:
          cpu: 150m
          memory: 200M
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kubernetes/
        name: kubelet-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: installer-sa-dockercfg-tckxz
    nodeName: ip-10-0-94-160.us-west-1.compute.internal
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: installer-sa
    serviceAccountName: installer-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/
        type: ""
      name: kubelet-dir
    - name: kube-api-access
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3600
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:54:05Z"
      reason: PodCompleted
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:54:07Z"
      reason: PodCompleted
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:54:07Z"
      reason: PodCompleted
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:54:05Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://a0c6f0d638bdf78a59d56c6ea2b86d6fffc428c7db07d1e3bfb93185d86ec4e7
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ae6e1c62c9475900e7abe01717f623bf9f1c27cc9903b09b773a57d43e613199
      imageID: 3c2ee7d73b732317c6aeb487f258ab3f8b589697c532a9f694b1feca282d5fe8
      lastState: {}
      name: pruner
      ready: false
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://a0c6f0d638bdf78a59d56c6ea2b86d6fffc428c7db07d1e3bfb93185d86ec4e7
          exitCode: 0
          finishedAt: "2023-12-06T09:54:06Z"
          reason: Completed
          startedAt: "2023-12-06T09:54:06Z"
    hostIP: 10.0.94.160
    phase: Succeeded
    podIP: 10.130.0.50
    podIPs:
    - ip: 10.130.0.50
    qosClass: Guaranteed
    startTime: "2023-12-06T09:54:05Z"
kind: PodList
metadata:
  resourceVersion: "47825"
