---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-06T09:25:17Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 6ff8f5655c
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"be11d3b6-3ad6-4b42-b802-089696e86ea0"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:25:17Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.7.104"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:26:03Z"
    name: multus-4v88z
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: be11d3b6-3ad6-4b42-b802-089696e86ea0
    resourceVersion: "18871"
    uid: f81243fb-44be-4f5c-995d-e77ed66eb3cb
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-7-104.us-west-1.compute.internal
    containers:
    - args:
      - |
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vsfdn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    imagePullSecrets:
    - name: default-dockercfg-hcv7c
    nodeName: ip-10-0-7-104.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-vsfdn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://6ae2b4ada77d8f1b8918b5d3f5eafcd2c7c35a80471b8a77b425cca828dc1449
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imageID: cb8c9b58e05d00c8334d7c45c4d12ada9e07af21879d88b895dfaf4c1e6ea408
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:26:03Z"
    hostIP: 10.0.7.104
    phase: Running
    podIP: 10.0.7.104
    podIPs:
    - ip: 10.0.7.104
    qosClass: Burstable
    startTime: "2023-12-06T09:25:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-06T09:25:16Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 77969585f6
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4286ad52-1a3d-4647-bf95-60077aa88a55"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:25:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.7.104"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:26:31Z"
    name: multus-additional-cni-plugins-dvhdr
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 4286ad52-1a3d-4647-bf95-60077aa88a55
    resourceVersion: "20016"
    uid: 64051673-4541-491a-b468-4737b6f9aff3
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-7-104.us-west-1.compute.internal
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7mmlf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: multus-ancillary-tools-dockercfg-m2bw4
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c080b7901e1f54334684703bdee5bcaf99520e8c66f5770a5f4a6e40d953401c
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7mmlf
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:60ceeddb3aab2941c7fa3a5f547ee1c55ba3987223e8b87af0ab9109a3a79e00
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7mmlf
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:fc7633722fe865cea33b65a1893dd64b17ef3f1b9ee611dffd63a172cf27e59b
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7mmlf
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c91fb68e5b2a405ed805616ddc1f9fbfb815ae7c0187a72ce7066c53442c62d1
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7mmlf
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7mmlf
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7mmlf
        readOnly: true
    nodeName: ip-10-0-7-104.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-7mmlf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:30Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:17Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://4f1b378d9d0b72ffcc73b43743f4a9a8d6ffa97c1e912eb62f25c19fb13707cb
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imageID: cb8c9b58e05d00c8334d7c45c4d12ada9e07af21879d88b895dfaf4c1e6ea408
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:26:30Z"
    hostIP: 10.0.7.104
    initContainerStatuses:
    - containerID: cri-o://e558f10ceed4c11e65fabb373ffe9b019e2f57017e73249fa9419fceda6d57fc
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c080b7901e1f54334684703bdee5bcaf99520e8c66f5770a5f4a6e40d953401c
      imageID: 2e4403d4c0aba24550f5a98dc58fbba567b66c4f640e799da66f72dcc0e4e4ed
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://e558f10ceed4c11e65fabb373ffe9b019e2f57017e73249fa9419fceda6d57fc
          exitCode: 0
          finishedAt: "2023-12-06T09:26:03Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:03Z"
    - containerID: cri-o://652283f53e47d027b257d0273e2421132a0d119e1a414e270b03d5e95bcd4aa0
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:60ceeddb3aab2941c7fa3a5f547ee1c55ba3987223e8b87af0ab9109a3a79e00
      imageID: ef8349b714403130557f09687b0fcd0ded2063054a7878016266c7034fefabe5
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://652283f53e47d027b257d0273e2421132a0d119e1a414e270b03d5e95bcd4aa0
          exitCode: 0
          finishedAt: "2023-12-06T09:26:14Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:13Z"
    - containerID: cri-o://338c8d24c2b33605817025def10b9800d8bbed92f156c02584b7eb47187ea9cf
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:fc7633722fe865cea33b65a1893dd64b17ef3f1b9ee611dffd63a172cf27e59b
      imageID: 9b7208c1ac6b10a58a49a20f3545143826c383eed5c5e50a981616849912842a
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://338c8d24c2b33605817025def10b9800d8bbed92f156c02584b7eb47187ea9cf
          exitCode: 0
          finishedAt: "2023-12-06T09:26:19Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:19Z"
    - containerID: cri-o://ade722503170f05e2dfd1de8f93816c1fb05d0f2914c257dbbf43ef2654a6381
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c91fb68e5b2a405ed805616ddc1f9fbfb815ae7c0187a72ce7066c53442c62d1
      imageID: 9fbb7dfd12ef1e2ade66b661d004dcf6e980db09a60a6682e8befa04e97705cf
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://ade722503170f05e2dfd1de8f93816c1fb05d0f2914c257dbbf43ef2654a6381
          exitCode: 0
          finishedAt: "2023-12-06T09:26:21Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:21Z"
    - containerID: cri-o://8f1b704168cf4ea3c48e47d5a6135eb615ada3c72b91df0ea9ee99d8c54f48ce
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imageID: bff07eef67123dd358e67e56242c389a4b07cca57c60fcf48b05cff56dba316c
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://8f1b704168cf4ea3c48e47d5a6135eb615ada3c72b91df0ea9ee99d8c54f48ce
          exitCode: 0
          finishedAt: "2023-12-06T09:26:28Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:28Z"
    - containerID: cri-o://0b39c0332099b9909dc90f3450bb96fa3726d130d7d2a5f3f7e214a570161340
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imageID: bff07eef67123dd358e67e56242c389a4b07cca57c60fcf48b05cff56dba316c
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://0b39c0332099b9909dc90f3450bb96fa3726d130d7d2a5f3f7e214a570161340
          exitCode: 0
          finishedAt: "2023-12-06T09:26:29Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:29Z"
    phase: Running
    podIP: 10.0.7.104
    podIPs:
    - ip: 10.0.7.104
    qosClass: Burstable
    startTime: "2023-12-06T09:25:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-06T09:20:01Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 77969585f6
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4286ad52-1a3d-4647-bf95-60077aa88a55"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:20:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.106.212"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:20:37Z"
    name: multus-additional-cni-plugins-glnk6
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 4286ad52-1a3d-4647-bf95-60077aa88a55
    resourceVersion: "4220"
    uid: 18397f56-5266-4ef0-8330-d8eaf5a5f7a3
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-106-212.us-west-1.compute.internal
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x4t5z
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c080b7901e1f54334684703bdee5bcaf99520e8c66f5770a5f4a6e40d953401c
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x4t5z
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:60ceeddb3aab2941c7fa3a5f547ee1c55ba3987223e8b87af0ab9109a3a79e00
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x4t5z
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:fc7633722fe865cea33b65a1893dd64b17ef3f1b9ee611dffd63a172cf27e59b
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x4t5z
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c91fb68e5b2a405ed805616ddc1f9fbfb815ae7c0187a72ce7066c53442c62d1
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x4t5z
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x4t5z
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x4t5z
        readOnly: true
    nodeName: ip-10-0-106-212.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-x4t5z
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://483ecfbe6dc152ebdb5ddec47c8ba23e6a974dd51f37f76361d782e3a4e6b0ca
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imageID: cb8c9b58e05d00c8334d7c45c4d12ada9e07af21879d88b895dfaf4c1e6ea408
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:20:36Z"
    hostIP: 10.0.106.212
    initContainerStatuses:
    - containerID: cri-o://989f9c12711d9789b66e9306383de051b184d45ef1a0d9583ccdb6a376d1634b
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c080b7901e1f54334684703bdee5bcaf99520e8c66f5770a5f4a6e40d953401c
      imageID: 2e4403d4c0aba24550f5a98dc58fbba567b66c4f640e799da66f72dcc0e4e4ed
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://989f9c12711d9789b66e9306383de051b184d45ef1a0d9583ccdb6a376d1634b
          exitCode: 0
          finishedAt: "2023-12-06T09:20:09Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:09Z"
    - containerID: cri-o://6801a3532d88c0b08f660e4caae40eb6541a83229812ca71c2664653c7baa204
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:60ceeddb3aab2941c7fa3a5f547ee1c55ba3987223e8b87af0ab9109a3a79e00
      imageID: ef8349b714403130557f09687b0fcd0ded2063054a7878016266c7034fefabe5
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://6801a3532d88c0b08f660e4caae40eb6541a83229812ca71c2664653c7baa204
          exitCode: 0
          finishedAt: "2023-12-06T09:20:16Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:16Z"
    - containerID: cri-o://64f79a6a08758613aae6b6a948aca58794b6909b201938f9d8f646baafcd2328
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:fc7633722fe865cea33b65a1893dd64b17ef3f1b9ee611dffd63a172cf27e59b
      imageID: 9b7208c1ac6b10a58a49a20f3545143826c383eed5c5e50a981616849912842a
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://64f79a6a08758613aae6b6a948aca58794b6909b201938f9d8f646baafcd2328
          exitCode: 0
          finishedAt: "2023-12-06T09:20:28Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:28Z"
    - containerID: cri-o://38991f3da62abc795d1535107f05108e771444184c22ec4dccd088170a69820a
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c91fb68e5b2a405ed805616ddc1f9fbfb815ae7c0187a72ce7066c53442c62d1
      imageID: 9fbb7dfd12ef1e2ade66b661d004dcf6e980db09a60a6682e8befa04e97705cf
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://38991f3da62abc795d1535107f05108e771444184c22ec4dccd088170a69820a
          exitCode: 0
          finishedAt: "2023-12-06T09:20:30Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:30Z"
    - containerID: cri-o://7cec538d85c05b3d7787cc29c1b8195cf913ec8c96578911e3c1bc6bc2df2f27
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imageID: bff07eef67123dd358e67e56242c389a4b07cca57c60fcf48b05cff56dba316c
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://7cec538d85c05b3d7787cc29c1b8195cf913ec8c96578911e3c1bc6bc2df2f27
          exitCode: 0
          finishedAt: "2023-12-06T09:20:35Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:35Z"
    - containerID: cri-o://12ab2789d988de8239267d4be601d9f922c4f6412a4ae19e8f2f0d5fc946a024
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imageID: bff07eef67123dd358e67e56242c389a4b07cca57c60fcf48b05cff56dba316c
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://12ab2789d988de8239267d4be601d9f922c4f6412a4ae19e8f2f0d5fc946a024
          exitCode: 0
          finishedAt: "2023-12-06T09:20:35Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:35Z"
    phase: Running
    podIP: 10.0.106.212
    podIPs:
    - ip: 10.0.106.212
    qosClass: Burstable
    startTime: "2023-12-06T09:20:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-06T09:20:01Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 77969585f6
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4286ad52-1a3d-4647-bf95-60077aa88a55"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:20:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.21.63"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:20:44Z"
    name: multus-additional-cni-plugins-hrrlz
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 4286ad52-1a3d-4647-bf95-60077aa88a55
    resourceVersion: "4324"
    uid: 5cef811e-d6f1-4937-9fcf-9bcc6d19f512
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-21-63.us-west-1.compute.internal
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f6grc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c080b7901e1f54334684703bdee5bcaf99520e8c66f5770a5f4a6e40d953401c
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f6grc
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:60ceeddb3aab2941c7fa3a5f547ee1c55ba3987223e8b87af0ab9109a3a79e00
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f6grc
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:fc7633722fe865cea33b65a1893dd64b17ef3f1b9ee611dffd63a172cf27e59b
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f6grc
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c91fb68e5b2a405ed805616ddc1f9fbfb815ae7c0187a72ce7066c53442c62d1
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f6grc
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f6grc
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f6grc
        readOnly: true
    nodeName: ip-10-0-21-63.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-f6grc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://90d2eee911fa5cd5dd78bc9ecd2dba829bfdb68e0eb5a545009186d042de8792
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imageID: cb8c9b58e05d00c8334d7c45c4d12ada9e07af21879d88b895dfaf4c1e6ea408
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:20:43Z"
    hostIP: 10.0.21.63
    initContainerStatuses:
    - containerID: cri-o://bdb9f47cfcf8697b4119a0c09b388f77ca290f4d7315aaf1a32cefa1b6aa6cf8
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c080b7901e1f54334684703bdee5bcaf99520e8c66f5770a5f4a6e40d953401c
      imageID: 2e4403d4c0aba24550f5a98dc58fbba567b66c4f640e799da66f72dcc0e4e4ed
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://bdb9f47cfcf8697b4119a0c09b388f77ca290f4d7315aaf1a32cefa1b6aa6cf8
          exitCode: 0
          finishedAt: "2023-12-06T09:20:09Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:09Z"
    - containerID: cri-o://05cc8cf3a4b23cc3b502238d6847f80ecc8ba3665c6e8c165a62728af6e30558
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:60ceeddb3aab2941c7fa3a5f547ee1c55ba3987223e8b87af0ab9109a3a79e00
      imageID: ef8349b714403130557f09687b0fcd0ded2063054a7878016266c7034fefabe5
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://05cc8cf3a4b23cc3b502238d6847f80ecc8ba3665c6e8c165a62728af6e30558
          exitCode: 0
          finishedAt: "2023-12-06T09:20:27Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:27Z"
    - containerID: cri-o://47b8131bc681f76d952842f9f87628db46ccb7f9b8fc75f14edbb2ca5b9b2d95
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:fc7633722fe865cea33b65a1893dd64b17ef3f1b9ee611dffd63a172cf27e59b
      imageID: 9b7208c1ac6b10a58a49a20f3545143826c383eed5c5e50a981616849912842a
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://47b8131bc681f76d952842f9f87628db46ccb7f9b8fc75f14edbb2ca5b9b2d95
          exitCode: 0
          finishedAt: "2023-12-06T09:20:33Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:33Z"
    - containerID: cri-o://c1fded1dcdd1b418bf1bb717772e493ef55bf842a87d4c3a608a0efdbe4afbbb
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c91fb68e5b2a405ed805616ddc1f9fbfb815ae7c0187a72ce7066c53442c62d1
      imageID: 9fbb7dfd12ef1e2ade66b661d004dcf6e980db09a60a6682e8befa04e97705cf
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://c1fded1dcdd1b418bf1bb717772e493ef55bf842a87d4c3a608a0efdbe4afbbb
          exitCode: 0
          finishedAt: "2023-12-06T09:20:35Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:35Z"
    - containerID: cri-o://a812053beebcc48673cdc7a910acc3647df4b8177b1f48f354e42d7e15359124
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imageID: bff07eef67123dd358e67e56242c389a4b07cca57c60fcf48b05cff56dba316c
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://a812053beebcc48673cdc7a910acc3647df4b8177b1f48f354e42d7e15359124
          exitCode: 0
          finishedAt: "2023-12-06T09:20:41Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:41Z"
    - containerID: cri-o://5e1b6b7afa3ad1195f1757bef801bec32898be9bfba905fb5ca76f004676e2f2
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imageID: bff07eef67123dd358e67e56242c389a4b07cca57c60fcf48b05cff56dba316c
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://5e1b6b7afa3ad1195f1757bef801bec32898be9bfba905fb5ca76f004676e2f2
          exitCode: 0
          finishedAt: "2023-12-06T09:20:42Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:42Z"
    phase: Running
    podIP: 10.0.21.63
    podIPs:
    - ip: 10.0.21.63
    qosClass: Burstable
    startTime: "2023-12-06T09:20:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-06T09:25:16Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 77969585f6
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4286ad52-1a3d-4647-bf95-60077aa88a55"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:25:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.122.108"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:26:41Z"
    name: multus-additional-cni-plugins-m5rt9
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 4286ad52-1a3d-4647-bf95-60077aa88a55
    resourceVersion: "20257"
    uid: 09639f7a-0d6e-4129-a71c-99b800774c15
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-122-108.us-west-1.compute.internal
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g7vk2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: multus-ancillary-tools-dockercfg-m2bw4
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c080b7901e1f54334684703bdee5bcaf99520e8c66f5770a5f4a6e40d953401c
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g7vk2
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:60ceeddb3aab2941c7fa3a5f547ee1c55ba3987223e8b87af0ab9109a3a79e00
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g7vk2
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:fc7633722fe865cea33b65a1893dd64b17ef3f1b9ee611dffd63a172cf27e59b
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g7vk2
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c91fb68e5b2a405ed805616ddc1f9fbfb815ae7c0187a72ce7066c53442c62d1
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g7vk2
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g7vk2
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g7vk2
        readOnly: true
    nodeName: ip-10-0-122-108.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-g7vk2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://fa6bc350951e48b1f4137f52f5d7b9fb3f42b56f136336fdaa19791953c784bb
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imageID: cb8c9b58e05d00c8334d7c45c4d12ada9e07af21879d88b895dfaf4c1e6ea408
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:26:40Z"
    hostIP: 10.0.122.108
    initContainerStatuses:
    - containerID: cri-o://59b968f28e76249021450eee8d1f236873185dc7578cca5e0f14cb7002822e53
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c080b7901e1f54334684703bdee5bcaf99520e8c66f5770a5f4a6e40d953401c
      imageID: 2e4403d4c0aba24550f5a98dc58fbba567b66c4f640e799da66f72dcc0e4e4ed
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://59b968f28e76249021450eee8d1f236873185dc7578cca5e0f14cb7002822e53
          exitCode: 0
          finishedAt: "2023-12-06T09:26:08Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:08Z"
    - containerID: cri-o://8bd41d5127dddb42adaf24f794f46c9244a6934ce9ebf2c6c900246890f802ca
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:60ceeddb3aab2941c7fa3a5f547ee1c55ba3987223e8b87af0ab9109a3a79e00
      imageID: ef8349b714403130557f09687b0fcd0ded2063054a7878016266c7034fefabe5
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://8bd41d5127dddb42adaf24f794f46c9244a6934ce9ebf2c6c900246890f802ca
          exitCode: 0
          finishedAt: "2023-12-06T09:26:18Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:18Z"
    - containerID: cri-o://a690ccda9dfe38e9d1f62b85af533e692bbe3e4f0a6c4430535cceed4e97fcc5
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:fc7633722fe865cea33b65a1893dd64b17ef3f1b9ee611dffd63a172cf27e59b
      imageID: 9b7208c1ac6b10a58a49a20f3545143826c383eed5c5e50a981616849912842a
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://a690ccda9dfe38e9d1f62b85af533e692bbe3e4f0a6c4430535cceed4e97fcc5
          exitCode: 0
          finishedAt: "2023-12-06T09:26:29Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:29Z"
    - containerID: cri-o://bac2716c282ad86ceb14f2890530fbf2651af7042d08c6bcfea403861565e708
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c91fb68e5b2a405ed805616ddc1f9fbfb815ae7c0187a72ce7066c53442c62d1
      imageID: 9fbb7dfd12ef1e2ade66b661d004dcf6e980db09a60a6682e8befa04e97705cf
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://bac2716c282ad86ceb14f2890530fbf2651af7042d08c6bcfea403861565e708
          exitCode: 0
          finishedAt: "2023-12-06T09:26:32Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:32Z"
    - containerID: cri-o://3e8564f9eb879d14c1f9ef8b9a9f46d2a9db4d147bae88c9390f7bdb0c1c858c
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imageID: bff07eef67123dd358e67e56242c389a4b07cca57c60fcf48b05cff56dba316c
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://3e8564f9eb879d14c1f9ef8b9a9f46d2a9db4d147bae88c9390f7bdb0c1c858c
          exitCode: 0
          finishedAt: "2023-12-06T09:26:39Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:39Z"
    - containerID: cri-o://0a412d57a1699bce09fb64f88757f71b5fdb4905bf45bfe1098615d3d12318ad
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imageID: bff07eef67123dd358e67e56242c389a4b07cca57c60fcf48b05cff56dba316c
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://0a412d57a1699bce09fb64f88757f71b5fdb4905bf45bfe1098615d3d12318ad
          exitCode: 0
          finishedAt: "2023-12-06T09:26:39Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:39Z"
    phase: Running
    podIP: 10.0.122.108
    podIPs:
    - ip: 10.0.122.108
    qosClass: Burstable
    startTime: "2023-12-06T09:25:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-06T09:25:23Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 77969585f6
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4286ad52-1a3d-4647-bf95-60077aa88a55"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:25:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.81.189"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:26:42Z"
    name: multus-additional-cni-plugins-nx4lv
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 4286ad52-1a3d-4647-bf95-60077aa88a55
    resourceVersion: "20281"
    uid: 66c9432e-a59c-4cb8-af3f-31a02f3330e8
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-81-189.us-west-1.compute.internal
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-llnmr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    imagePullSecrets:
    - name: multus-ancillary-tools-dockercfg-m2bw4
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c080b7901e1f54334684703bdee5bcaf99520e8c66f5770a5f4a6e40d953401c
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-llnmr
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:60ceeddb3aab2941c7fa3a5f547ee1c55ba3987223e8b87af0ab9109a3a79e00
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-llnmr
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:fc7633722fe865cea33b65a1893dd64b17ef3f1b9ee611dffd63a172cf27e59b
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-llnmr
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c91fb68e5b2a405ed805616ddc1f9fbfb815ae7c0187a72ce7066c53442c62d1
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-llnmr
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-llnmr
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-llnmr
        readOnly: true
    nodeName: ip-10-0-81-189.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-llnmr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://046aeed385bc437f1bbd9ce87b1a7404127e4c557cc126e8dbced271edb62257
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imageID: cb8c9b58e05d00c8334d7c45c4d12ada9e07af21879d88b895dfaf4c1e6ea408
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:26:42Z"
    hostIP: 10.0.81.189
    initContainerStatuses:
    - containerID: cri-o://51ab04573b47a84d541090d4edab7aff2271e74ac8709ee597fdfb423d5f4d52
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c080b7901e1f54334684703bdee5bcaf99520e8c66f5770a5f4a6e40d953401c
      imageID: 2e4403d4c0aba24550f5a98dc58fbba567b66c4f640e799da66f72dcc0e4e4ed
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://51ab04573b47a84d541090d4edab7aff2271e74ac8709ee597fdfb423d5f4d52
          exitCode: 0
          finishedAt: "2023-12-06T09:26:12Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:12Z"
    - containerID: cri-o://a5c6ace2c0d8c75aa54fb3d1f36435938d6dc30ca7b75534bb18aa26498633ec
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:60ceeddb3aab2941c7fa3a5f547ee1c55ba3987223e8b87af0ab9109a3a79e00
      imageID: ef8349b714403130557f09687b0fcd0ded2063054a7878016266c7034fefabe5
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://a5c6ace2c0d8c75aa54fb3d1f36435938d6dc30ca7b75534bb18aa26498633ec
          exitCode: 0
          finishedAt: "2023-12-06T09:26:22Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:22Z"
    - containerID: cri-o://5faaa7206eb64aede60c1c8c7d5c05ae0b259e22c71047986034525db3fdf67c
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:fc7633722fe865cea33b65a1893dd64b17ef3f1b9ee611dffd63a172cf27e59b
      imageID: 9b7208c1ac6b10a58a49a20f3545143826c383eed5c5e50a981616849912842a
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://5faaa7206eb64aede60c1c8c7d5c05ae0b259e22c71047986034525db3fdf67c
          exitCode: 0
          finishedAt: "2023-12-06T09:26:29Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:29Z"
    - containerID: cri-o://6a6b769678067307e77bd8e268a00f86f454960e68c520f2c623920fb68281f9
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c91fb68e5b2a405ed805616ddc1f9fbfb815ae7c0187a72ce7066c53442c62d1
      imageID: 9fbb7dfd12ef1e2ade66b661d004dcf6e980db09a60a6682e8befa04e97705cf
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://6a6b769678067307e77bd8e268a00f86f454960e68c520f2c623920fb68281f9
          exitCode: 0
          finishedAt: "2023-12-06T09:26:33Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:33Z"
    - containerID: cri-o://6132c30756d869f9a0aceca54a2c543a4aaa0ac163e4cbd97292be836dc4358e
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imageID: bff07eef67123dd358e67e56242c389a4b07cca57c60fcf48b05cff56dba316c
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://6132c30756d869f9a0aceca54a2c543a4aaa0ac163e4cbd97292be836dc4358e
          exitCode: 0
          finishedAt: "2023-12-06T09:26:40Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:40Z"
    - containerID: cri-o://9194feced16ddf79c3c8a98eac528e0c330c72748f172eefa01ba9aa0301c1cd
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imageID: bff07eef67123dd358e67e56242c389a4b07cca57c60fcf48b05cff56dba316c
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://9194feced16ddf79c3c8a98eac528e0c330c72748f172eefa01ba9aa0301c1cd
          exitCode: 0
          finishedAt: "2023-12-06T09:26:40Z"
          reason: Completed
          startedAt: "2023-12-06T09:26:40Z"
    phase: Running
    podIP: 10.0.81.189
    podIPs:
    - ip: 10.0.81.189
    qosClass: Burstable
    startTime: "2023-12-06T09:25:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-06T09:20:01Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 77969585f6
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4286ad52-1a3d-4647-bf95-60077aa88a55"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:20:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.94.160"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:20:38Z"
    name: multus-additional-cni-plugins-vz2cv
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: 4286ad52-1a3d-4647-bf95-60077aa88a55
    resourceVersion: "4242"
    uid: 24265605-20e8-4414-9390-7c930ded4674
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-94-160.us-west-1.compute.internal
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w9mk4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c080b7901e1f54334684703bdee5bcaf99520e8c66f5770a5f4a6e40d953401c
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w9mk4
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:60ceeddb3aab2941c7fa3a5f547ee1c55ba3987223e8b87af0ab9109a3a79e00
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w9mk4
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:fc7633722fe865cea33b65a1893dd64b17ef3f1b9ee611dffd63a172cf27e59b
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w9mk4
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c91fb68e5b2a405ed805616ddc1f9fbfb815ae7c0187a72ce7066c53442c62d1
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w9mk4
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w9mk4
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-w9mk4
        readOnly: true
    nodeName: ip-10-0-94-160.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-w9mk4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://4e4c11d5fac7fbadc4b3904cf9bffa65cae75c1177e20d7716edd2ebc3d477f2
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imageID: cb8c9b58e05d00c8334d7c45c4d12ada9e07af21879d88b895dfaf4c1e6ea408
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:20:37Z"
    hostIP: 10.0.94.160
    initContainerStatuses:
    - containerID: cri-o://d3a3fea3a68140280c2f2d6785adcb9770c3bc6f273e1b705dcb5814961e2c01
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c080b7901e1f54334684703bdee5bcaf99520e8c66f5770a5f4a6e40d953401c
      imageID: 2e4403d4c0aba24550f5a98dc58fbba567b66c4f640e799da66f72dcc0e4e4ed
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://d3a3fea3a68140280c2f2d6785adcb9770c3bc6f273e1b705dcb5814961e2c01
          exitCode: 0
          finishedAt: "2023-12-06T09:20:09Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:09Z"
    - containerID: cri-o://475a5ff282db7ed9cb13218565e784a043a2ef52af2b06d99622748e5599ecfc
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:60ceeddb3aab2941c7fa3a5f547ee1c55ba3987223e8b87af0ab9109a3a79e00
      imageID: ef8349b714403130557f09687b0fcd0ded2063054a7878016266c7034fefabe5
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://475a5ff282db7ed9cb13218565e784a043a2ef52af2b06d99622748e5599ecfc
          exitCode: 0
          finishedAt: "2023-12-06T09:20:20Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:19Z"
    - containerID: cri-o://cc77d351e06f372fdbddc3a3caf8e7fcd44b90c0e6dcce40bc2126fd752793c8
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:fc7633722fe865cea33b65a1893dd64b17ef3f1b9ee611dffd63a172cf27e59b
      imageID: 9b7208c1ac6b10a58a49a20f3545143826c383eed5c5e50a981616849912842a
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://cc77d351e06f372fdbddc3a3caf8e7fcd44b90c0e6dcce40bc2126fd752793c8
          exitCode: 0
          finishedAt: "2023-12-06T09:20:27Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:27Z"
    - containerID: cri-o://789f40cbf04bcc1a87cce85b34541d00564b0fc1f4b7e117cd63ce22a813c8b7
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:c91fb68e5b2a405ed805616ddc1f9fbfb815ae7c0187a72ce7066c53442c62d1
      imageID: 9fbb7dfd12ef1e2ade66b661d004dcf6e980db09a60a6682e8befa04e97705cf
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://789f40cbf04bcc1a87cce85b34541d00564b0fc1f4b7e117cd63ce22a813c8b7
          exitCode: 0
          finishedAt: "2023-12-06T09:20:29Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:29Z"
    - containerID: cri-o://ffdca76c8f8f8cad70aaace5ba0d67be6f5bc7fe20bd669ef157cf3151440963
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imageID: bff07eef67123dd358e67e56242c389a4b07cca57c60fcf48b05cff56dba316c
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://ffdca76c8f8f8cad70aaace5ba0d67be6f5bc7fe20bd669ef157cf3151440963
          exitCode: 0
          finishedAt: "2023-12-06T09:20:35Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:35Z"
    - containerID: cri-o://b229e38403497cccaa7ecab123eae7b0f93db6fa505d2cdaaab7e66eb20c86be
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:bc1bc2b62552d4e6f569bf57884a296cf97a386f28d022d171e3704a3e1aa39b
      imageID: bff07eef67123dd358e67e56242c389a4b07cca57c60fcf48b05cff56dba316c
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://b229e38403497cccaa7ecab123eae7b0f93db6fa505d2cdaaab7e66eb20c86be
          exitCode: 0
          finishedAt: "2023-12-06T09:20:36Z"
          reason: Completed
          startedAt: "2023-12-06T09:20:36Z"
    phase: Running
    podIP: 10.0.94.160
    podIPs:
    - ip: 10.0.94.160
    qosClass: Burstable
    startTime: "2023-12-06T09:20:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: hosted-cluster-api-access
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.57/23"],"mac_address":"0a:58:0a:81:00:39","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.57/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.57"
            ],
            "mac": "0a:58:0a:81:00:39",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:21:58Z"
    generateName: multus-admission-controller-66cc74c65d-
    labels:
      app: multus-admission-controller
      component: network
      namespace: openshift-multus
      openshift.io/component: network
      pod-template-hash: 66cc74c65d
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-21-63
      operation: Update
      subresource: status
      time: "2023-12-06T09:21:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:namespace: {}
            f:openshift.io/component: {}
            f:pod-template-hash: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dad0c3bf-365b-4eb6-b77d-593df68e68b9"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"multus-admission-controller"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"webhook-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:21:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:21:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.57"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:22:07Z"
    name: multus-admission-controller-66cc74c65d-7cjf5
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: multus-admission-controller-66cc74c65d
      uid: dad0c3bf-365b-4eb6-b77d-593df68e68b9
    resourceVersion: "9307"
    uid: fb6ff31a-3b4d-4b77-a083-a92b71225d19
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |-
        set -euo pipefail
        exec /usr/bin/webhook \
          -bind-address=0.0.0.0 \
          -port=6443 \
          -tls-private-key-file=/etc/webhook/tls.key \
          -tls-cert-file=/etc/webhook/tls.crt \
          -metrics-listen-address=127.0.0.1:9091 \
          -alsologtostderr=true \
          -ignore-namespaces=openshift-etcd,openshift-console,openshift-ingress-canary,openshift-apiserver,openshift-apiserver-operator,openshift-authentication,openshift-authentication-operator,openshift-cloud-controller-manager,openshift-cloud-controller-manager-operator,openshift-cloud-credential-operator,openshift-cloud-network-config-controller,openshift-cluster-csi-drivers,openshift-cluster-machine-approver,openshift-cluster-node-tuning-operator,openshift-cluster-samples-operator,openshift-cluster-storage-operator,openshift-cluster-version,openshift-config-operator,openshift-controller-manager,openshift-controller-manager-operator,openshift-dns,openshift-dns-operator,openshift-etcd-operator,openshift-image-registry,openshift-ingress,openshift-ingress-operator,openshift-insights,openshift-kube-apiserver,openshift-kube-apiserver-operator,openshift-kube-controller-manager,openshift-kube-controller-manager-operator,openshift-kube-scheduler,openshift-kube-scheduler-operator,openshift-kube-storage-version-migrator,openshift-kube-storage-version-migrator-operator,openshift-machine-api,openshift-machine-config-operator,openshift-marketplace,openshift-monitoring,openshift-multus,openshift-network-diagnostics,openshift-network-node-identity,openshift-network-operator,openshift-oauth-apiserver,openshift-operator-lifecycle-manager,openshift-ovn-kubernetes,openshift-route-controller-manager,openshift-service-ca-operator,openshift-user-workload-monitoring
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:7bba9c7887b4009c8d002e93102bf814a838f550d1818ee32a7b275fce061360
      imagePullPolicy: IfNotPresent
      name: multus-admission-controller
      ports:
      - containerPort: 9091
        name: metrics-port
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-plx5w
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/webhook/tls.key
      - --tls-cert-file=/etc/webhook/tls.crt
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-plx5w
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-21-63.us-west-1.compute.internal
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: multus-ac
    serviceAccountName: multus-ac
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: webhook-certs
      secret:
        defaultMode: 420
        secretName: multus-admission-controller-secret
    - name: kube-api-access-plx5w
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:21:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:22:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:22:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:21:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://cb6ce7b6f46ba92dd38c585c27ce3a7c8464ba921d9b41430ef968b960d40668
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      imageID: 97c6d23f8b8c74c6f338eb354b03a181b219a854b26158caac8277d37936d719
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:22:07Z"
    - containerID: cri-o://8af11d08643c49369ba4e451703c7b6feeb095cd70254f4d3ed240d0509db86f
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:7bba9c7887b4009c8d002e93102bf814a838f550d1818ee32a7b275fce061360
      imageID: 74bc62d8286f2b5a36b2c8ac5bc4bf76a55e46fac8fb3839b87038bbbaf7b501
      lastState: {}
      name: multus-admission-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:22:00Z"
    hostIP: 10.0.21.63
    phase: Running
    podIP: 10.129.0.57
    podIPs:
    - ip: 10.129.0.57
    qosClass: Burstable
    startTime: "2023-12-06T09:21:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: hosted-cluster-api-access
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.9/23"],"mac_address":"0a:58:0a:80:00:09","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.9/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.9"
            ],
            "mac": "0a:58:0a:80:00:09",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:21:54Z"
    generateName: multus-admission-controller-66cc74c65d-
    labels:
      app: multus-admission-controller
      component: network
      namespace: openshift-multus
      openshift.io/component: network
      pod-template-hash: 66cc74c65d
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-106-212
      operation: Update
      subresource: status
      time: "2023-12-06T09:21:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:namespace: {}
            f:openshift.io/component: {}
            f:pod-template-hash: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"dad0c3bf-365b-4eb6-b77d-593df68e68b9"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"multus-admission-controller"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"webhook-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:21:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:21:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.9"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:21:58Z"
    name: multus-admission-controller-66cc74c65d-8ksgd
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: multus-admission-controller-66cc74c65d
      uid: dad0c3bf-365b-4eb6-b77d-593df68e68b9
    resourceVersion: "8849"
    uid: 06d66e90-4108-4279-b2d4-358942871736
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |-
        set -euo pipefail
        exec /usr/bin/webhook \
          -bind-address=0.0.0.0 \
          -port=6443 \
          -tls-private-key-file=/etc/webhook/tls.key \
          -tls-cert-file=/etc/webhook/tls.crt \
          -metrics-listen-address=127.0.0.1:9091 \
          -alsologtostderr=true \
          -ignore-namespaces=openshift-etcd,openshift-console,openshift-ingress-canary,openshift-apiserver,openshift-apiserver-operator,openshift-authentication,openshift-authentication-operator,openshift-cloud-controller-manager,openshift-cloud-controller-manager-operator,openshift-cloud-credential-operator,openshift-cloud-network-config-controller,openshift-cluster-csi-drivers,openshift-cluster-machine-approver,openshift-cluster-node-tuning-operator,openshift-cluster-samples-operator,openshift-cluster-storage-operator,openshift-cluster-version,openshift-config-operator,openshift-controller-manager,openshift-controller-manager-operator,openshift-dns,openshift-dns-operator,openshift-etcd-operator,openshift-image-registry,openshift-ingress,openshift-ingress-operator,openshift-insights,openshift-kube-apiserver,openshift-kube-apiserver-operator,openshift-kube-controller-manager,openshift-kube-controller-manager-operator,openshift-kube-scheduler,openshift-kube-scheduler-operator,openshift-kube-storage-version-migrator,openshift-kube-storage-version-migrator-operator,openshift-machine-api,openshift-machine-config-operator,openshift-marketplace,openshift-monitoring,openshift-multus,openshift-network-diagnostics,openshift-network-node-identity,openshift-network-operator,openshift-oauth-apiserver,openshift-operator-lifecycle-manager,openshift-ovn-kubernetes,openshift-route-controller-manager,openshift-service-ca-operator,openshift-user-workload-monitoring
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:7bba9c7887b4009c8d002e93102bf814a838f550d1818ee32a7b275fce061360
      imagePullPolicy: IfNotPresent
      name: multus-admission-controller
      ports:
      - containerPort: 9091
        name: metrics-port
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hpkxf
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/webhook/tls.key
      - --tls-cert-file=/etc/webhook/tls.crt
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hpkxf
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-106-212.us-west-1.compute.internal
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: multus-ac
    serviceAccountName: multus-ac
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: webhook-certs
      secret:
        defaultMode: 420
        secretName: multus-admission-controller-secret
    - name: kube-api-access-hpkxf
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:21:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:21:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:21:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:21:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://60bedd79ce68cd45ef278f4cdade03a5e9bfeab9d6492e733b8f5d54baab0468
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      imageID: 97c6d23f8b8c74c6f338eb354b03a181b219a854b26158caac8277d37936d719
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:21:57Z"
    - containerID: cri-o://48db4e46a20faeea277795dc66ab485886f6e7b3b68f7d20c955f0476f736f61
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:7bba9c7887b4009c8d002e93102bf814a838f550d1818ee32a7b275fce061360
      imageID: 74bc62d8286f2b5a36b2c8ac5bc4bf76a55e46fac8fb3839b87038bbbaf7b501
      lastState: {}
      name: multus-admission-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:21:57Z"
    hostIP: 10.0.106.212
    phase: Running
    podIP: 10.128.0.9
    podIPs:
    - ip: 10.128.0.9
    qosClass: Burstable
    startTime: "2023-12-06T09:21:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-06T09:20:01Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 6ff8f5655c
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"be11d3b6-3ad6-4b42-b802-089696e86ea0"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:20:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.21.63"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:20:14Z"
    name: multus-hvqsc
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: be11d3b6-3ad6-4b42-b802-089696e86ea0
    resourceVersion: "3741"
    uid: 9daf6372-68f0-41b8-a070-c78fb709370f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-21-63.us-west-1.compute.internal
    containers:
    - args:
      - |
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k9nft
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-0-21-63.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-k9nft
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://811e49b99e18a5cd81ee2af3da36a72cde065219a2665075826b4a2975dc6378
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imageID: cb8c9b58e05d00c8334d7c45c4d12ada9e07af21879d88b895dfaf4c1e6ea408
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:20:13Z"
    hostIP: 10.0.21.63
    phase: Running
    podIP: 10.0.21.63
    podIPs:
    - ip: 10.0.21.63
    qosClass: Burstable
    startTime: "2023-12-06T09:20:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-06T09:20:01Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 6ff8f5655c
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"be11d3b6-3ad6-4b42-b802-089696e86ea0"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:20:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.94.160"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:21:00Z"
    name: multus-rhxrk
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: be11d3b6-3ad6-4b42-b802-089696e86ea0
    resourceVersion: "4707"
    uid: 8f10546f-f24d-4d39-8ac7-18df1b3468ad
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-94-160.us-west-1.compute.internal
    containers:
    - args:
      - |
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hvthp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-0-94-160.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-hvthp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:21:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:21:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b85ceb35be18fa0ae20ae3158dc1470e86303a0930dc2073c10b1ac3b444f8d6
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imageID: cb8c9b58e05d00c8334d7c45c4d12ada9e07af21879d88b895dfaf4c1e6ea408
      lastState:
        terminated:
          containerID: cri-o://ecdf52333647dec62c78fd3dea1ca88a26d995d6a65643bdf390769b9a8a1eb4
          exitCode: 1
          finishedAt: "2023-12-06T09:20:58Z"
          reason: Error
          startedAt: "2023-12-06T09:20:13Z"
      name: kube-multus
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:20:59Z"
    hostIP: 10.0.94.160
    phase: Running
    podIP: 10.0.94.160
    podIPs:
    - ip: 10.0.94.160
    qosClass: Burstable
    startTime: "2023-12-06T09:20:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-06T09:20:01Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 6ff8f5655c
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"be11d3b6-3ad6-4b42-b802-089696e86ea0"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:20:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.106.212"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:20:59Z"
    name: multus-t445c
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: be11d3b6-3ad6-4b42-b802-089696e86ea0
    resourceVersion: "4700"
    uid: 3c03aa74-b8a3-4dd3-a6e9-13c6e115a3de
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-106-212.us-west-1.compute.internal
    containers:
    - args:
      - |
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4gw8c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: ip-10-0-106-212.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-4gw8c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f2783d7cf50ff2d606ed4d71188596079fcfdc8bf6bad4496280f15a2fc80542
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imageID: cb8c9b58e05d00c8334d7c45c4d12ada9e07af21879d88b895dfaf4c1e6ea408
      lastState:
        terminated:
          containerID: cri-o://3f52695eace56e4a7cfb4311a49e1ed0c04db29fb23652a2aa31bd67b4328780
          exitCode: 1
          finishedAt: "2023-12-06T09:20:58Z"
          reason: Error
          startedAt: "2023-12-06T09:20:13Z"
      name: kube-multus
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:20:58Z"
    hostIP: 10.0.106.212
    phase: Running
    podIP: 10.0.106.212
    podIPs:
    - ip: 10.0.106.212
    qosClass: Burstable
    startTime: "2023-12-06T09:20:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-06T09:25:16Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 6ff8f5655c
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"be11d3b6-3ad6-4b42-b802-089696e86ea0"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:25:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.122.108"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:26:08Z"
    name: multus-xlz77
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: be11d3b6-3ad6-4b42-b802-089696e86ea0
    resourceVersion: "19075"
    uid: 4f70df50-cb6e-4367-975d-af856e80975e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-122-108.us-west-1.compute.internal
    containers:
    - args:
      - |
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bn4q7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    imagePullSecrets:
    - name: default-dockercfg-hcv7c
    nodeName: ip-10-0-122-108.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-bn4q7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://afb6b481ebe8ea3101a7dcf89be4e7838088367f3ef380f0c33cc7fa95e0dfb6
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imageID: cb8c9b58e05d00c8334d7c45c4d12ada9e07af21879d88b895dfaf4c1e6ea408
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:26:08Z"
    hostIP: 10.0.122.108
    phase: Running
    podIP: 10.0.122.108
    podIPs:
    - ip: 10.0.122.108
    qosClass: Burstable
    startTime: "2023-12-06T09:25:18Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2023-12-06T09:25:23Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 6ff8f5655c
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"be11d3b6-3ad6-4b42-b802-089696e86ea0"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:25:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.0.81.189"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:26:13Z"
    name: multus-zgxkc
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: be11d3b6-3ad6-4b42-b802-089696e86ea0
    resourceVersion: "19242"
    uid: 6a8751b7-4d12-4032-8a88-00a9029ff72d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-81-189.us-west-1.compute.internal
    containers:
    - args:
      - |
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ci-op-2j285qtr-234c7.origin-ci-int-aws.dev.rhcloud.com
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qsnl5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    imagePullSecrets:
    - name: default-dockercfg-hcv7c
    nodeName: ip-10-0-81-189.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-qsnl5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://528ffd09f0fc476ce00b4adc61d1db07ca9427752bbb210a1cf213e3104aa2b9
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:ee217337dd5bd79f87f42b9fdc9384bcc8a5690af16e73d0b0998748657e41ab
      imageID: cb8c9b58e05d00c8334d7c45c4d12ada9e07af21879d88b895dfaf4c1e6ea408
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:26:12Z"
    hostIP: 10.0.81.189
    phase: Running
    podIP: 10.0.81.189
    podIPs:
    - ip: 10.0.81.189
    qosClass: Burstable
    startTime: "2023-12-06T09:25:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.2.3/23"],"mac_address":"0a:58:0a:81:02:03","gateway_ips":["10.129.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.2.1"}],"ip_address":"10.129.2.3/23","gateway_ip":"10.129.2.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.2.3"
            ],
            "mac": "0a:58:0a:81:02:03",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:25:23Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 8589b5d69f
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"85d6e771-f87c-4466-b6d7-cdeeae4b4eed"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:25:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-81-189
      operation: Update
      subresource: status
      time: "2023-12-06T09:26:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:26:29Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.2.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:26:35Z"
    name: network-metrics-daemon-5tdgt
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 85d6e771-f87c-4466-b6d7-cdeeae4b4eed
    resourceVersion: "20141"
    uid: 70915699-ec24-45f7-a59d-8c2785d56565
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-81-189.us-west-1.compute.internal
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:7874f39d9146a86e3e71a3ea4a2a52b90bba5b70518f7523dcecb410cf52dad8
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-knmt6
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-knmt6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: metrics-daemon-sa-dockercfg-t2bt7
    nodeName: ip-10-0-81-189.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-knmt6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://26c745337b69c6a46c60e3532e7b4c32e2e64821004409a44f549070c8c2d001
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      imageID: 97c6d23f8b8c74c6f338eb354b03a181b219a854b26158caac8277d37936d719
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:26:35Z"
    - containerID: cri-o://eb9848e3dbb6fcb965c2ae3da9c9d8e9c5496429f83ed464a7a19387a1adaba5
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:7874f39d9146a86e3e71a3ea4a2a52b90bba5b70518f7523dcecb410cf52dad8
      imageID: a6775e22b81f188672352fdad67cb3c82a642f33844b1dc89476003a4c6a02d9
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:26:33Z"
    hostIP: 10.0.81.189
    phase: Running
    podIP: 10.129.2.3
    podIPs:
    - ip: 10.129.2.3
    qosClass: Burstable
    startTime: "2023-12-06T09:25:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.3/23"],"mac_address":"0a:58:0a:82:00:03","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.3/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.3"
            ],
            "mac": "0a:58:0a:82:00:03",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:20:02Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 8589b5d69f
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"85d6e771-f87c-4466-b6d7-cdeeae4b4eed"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:20:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-94-160
      operation: Update
      subresource: status
      time: "2023-12-06T09:20:33Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:22:10Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:22:14Z"
    name: network-metrics-daemon-7g8n7
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 85d6e771-f87c-4466-b6d7-cdeeae4b4eed
    resourceVersion: "9867"
    uid: 2c0e9181-f019-4f0e-bf84-a5ae97d5f733
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-94-160.us-west-1.compute.internal
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:7874f39d9146a86e3e71a3ea4a2a52b90bba5b70518f7523dcecb410cf52dad8
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hqxsr
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hqxsr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-94-160.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-hqxsr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:22:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:22:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b57ba297a6e1a803f71813fb493628ae913b7f597a8b0954ef20bfb5e97ba7b3
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      imageID: 97c6d23f8b8c74c6f338eb354b03a181b219a854b26158caac8277d37936d719
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:22:13Z"
    - containerID: cri-o://627af629fcc982e9b2af5f8a20532322b8eb84412f5beb888f21db94d8112010
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:7874f39d9146a86e3e71a3ea4a2a52b90bba5b70518f7523dcecb410cf52dad8
      imageID: a6775e22b81f188672352fdad67cb3c82a642f33844b1dc89476003a4c6a02d9
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:22:13Z"
    hostIP: 10.0.94.160
    phase: Running
    podIP: 10.130.0.3
    podIPs:
    - ip: 10.130.0.3
    qosClass: Burstable
    startTime: "2023-12-06T09:20:02Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.3/23"],"mac_address":"0a:58:0a:81:00:03","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.3/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.3"
            ],
            "mac": "0a:58:0a:81:00:03",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:20:02Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 8589b5d69f
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"85d6e771-f87c-4466-b6d7-cdeeae4b4eed"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:20:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-21-63
      operation: Update
      subresource: status
      time: "2023-12-06T09:20:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:22:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:22:16Z"
    name: network-metrics-daemon-8mhtp
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 85d6e771-f87c-4466-b6d7-cdeeae4b4eed
    resourceVersion: "10118"
    uid: 8d9ec11f-1f5b-41d3-8641-df40b31c79b3
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-21-63.us-west-1.compute.internal
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:7874f39d9146a86e3e71a3ea4a2a52b90bba5b70518f7523dcecb410cf52dad8
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-whzjl
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-whzjl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-21-63.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-whzjl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:22:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:22:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://c32b07f665436ccc1017d50457da6954b5bea032118593f99aa7663a5d1bb49e
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      imageID: 97c6d23f8b8c74c6f338eb354b03a181b219a854b26158caac8277d37936d719
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:22:15Z"
    - containerID: cri-o://a4d1b90e446387a49b396ff3106cc198888c91b1c5e26518163c5ab9f9bef7e1
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:7874f39d9146a86e3e71a3ea4a2a52b90bba5b70518f7523dcecb410cf52dad8
      imageID: a6775e22b81f188672352fdad67cb3c82a642f33844b1dc89476003a4c6a02d9
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:22:15Z"
    hostIP: 10.0.21.63
    phase: Running
    podIP: 10.129.0.3
    podIPs:
    - ip: 10.129.0.3
    qosClass: Burstable
    startTime: "2023-12-06T09:20:02Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.2.4/23"],"mac_address":"0a:58:0a:80:02:04","gateway_ips":["10.128.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.2.1"}],"ip_address":"10.128.2.4/23","gateway_ip":"10.128.2.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.2.4"
            ],
            "mac": "0a:58:0a:80:02:04",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:25:16Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 8589b5d69f
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"85d6e771-f87c-4466-b6d7-cdeeae4b4eed"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:25:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-7-104
      operation: Update
      subresource: status
      time: "2023-12-06T09:26:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:27:25Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.2.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:27:32Z"
    name: network-metrics-daemon-9mwgf
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 85d6e771-f87c-4466-b6d7-cdeeae4b4eed
    resourceVersion: "21183"
    uid: 22bfb020-eda3-454d-aebe-9a02ba0a401b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-7-104.us-west-1.compute.internal
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:7874f39d9146a86e3e71a3ea4a2a52b90bba5b70518f7523dcecb410cf52dad8
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cmjzl
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cmjzl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: metrics-daemon-sa-dockercfg-t2bt7
    nodeName: ip-10-0-7-104.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-cmjzl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:27:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:27:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://cc90476b5d9efc0bf106c382c2ea043b7c97f7e7a5c0632d82f15ca44026147f
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      imageID: 97c6d23f8b8c74c6f338eb354b03a181b219a854b26158caac8277d37936d719
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:27:31Z"
    - containerID: cri-o://add5d7f18fde7f4d002099eb281bb2a071e6c9626a7225ec9b16a4f07b86f213
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:7874f39d9146a86e3e71a3ea4a2a52b90bba5b70518f7523dcecb410cf52dad8
      imageID: a6775e22b81f188672352fdad67cb3c82a642f33844b1dc89476003a4c6a02d9
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:27:31Z"
    hostIP: 10.0.7.104
    phase: Running
    podIP: 10.128.2.4
    podIPs:
    - ip: 10.128.2.4
    qosClass: Burstable
    startTime: "2023-12-06T09:25:17Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.3/23"],"mac_address":"0a:58:0a:80:00:03","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.3/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.3"
            ],
            "mac": "0a:58:0a:80:00:03",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:20:02Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 8589b5d69f
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"85d6e771-f87c-4466-b6d7-cdeeae4b4eed"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:20:02Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-106-212
      operation: Update
      subresource: status
      time: "2023-12-06T09:20:47Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:22:12Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:22:15Z"
    name: network-metrics-daemon-fv5tt
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 85d6e771-f87c-4466-b6d7-cdeeae4b4eed
    resourceVersion: "10087"
    uid: c7c8b1ce-5e98-4bcf-8681-63ff65f3d2c8
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-106-212.us-west-1.compute.internal
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:7874f39d9146a86e3e71a3ea4a2a52b90bba5b70518f7523dcecb410cf52dad8
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sf9k
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sf9k
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: ip-10-0-106-212.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-2sf9k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:22:15Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:22:15Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:20:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://7a70d951ac25f342034f529f4cdb1eff74996398782d642a5f57f78f9f00c6aa
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      imageID: 97c6d23f8b8c74c6f338eb354b03a181b219a854b26158caac8277d37936d719
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:22:15Z"
    - containerID: cri-o://8dd286aeeecddc8de49683765e355570a18a4314bf7f0897c9abb2ea900465af
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:7874f39d9146a86e3e71a3ea4a2a52b90bba5b70518f7523dcecb410cf52dad8
      imageID: a6775e22b81f188672352fdad67cb3c82a642f33844b1dc89476003a4c6a02d9
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:22:15Z"
    hostIP: 10.0.106.212
    phase: Running
    podIP: 10.128.0.3
    podIPs:
    - ip: 10.128.0.3
    qosClass: Burstable
    startTime: "2023-12-06T09:20:02Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.131.0.3/23"],"mac_address":"0a:58:0a:83:00:03","gateway_ips":["10.131.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.131.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.131.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.131.0.1"}],"ip_address":"10.131.0.3/23","gateway_ip":"10.131.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.0.3"
            ],
            "mac": "0a:58:0a:83:00:03",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2023-12-06T09:25:16Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 8589b5d69f
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"85d6e771-f87c-4466-b6d7-cdeeae4b4eed"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2023-12-06T09:25:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: ip-10-0-122-108
      operation: Update
      subresource: status
      time: "2023-12-06T09:26:14Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2023-12-06T09:26:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.131.0.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2023-12-06T09:26:32Z"
    name: network-metrics-daemon-m45jw
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 85d6e771-f87c-4466-b6d7-cdeeae4b4eed
    resourceVersion: "20074"
    uid: 1e31aa99-4cc3-4b86-abbd-2631e70b3d70
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - ip-10-0-122-108.us-west-1.compute.internal
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:7874f39d9146a86e3e71a3ea4a2a52b90bba5b70518f7523dcecb410cf52dad8
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wczj8
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wczj8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: metrics-daemon-sa-dockercfg-t2bt7
    nodeName: ip-10-0-122-108.us-west-1.compute.internal
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-wczj8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:18Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:26:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-12-06T09:25:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://197af47215d33671a0dcfb8bf42d67208cee8cab171d81490b3801a27eef23e0
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:e2def4213ec0657e72eb790ae8a115511d5b8f164a62d3568d2f1bff189917e8
      imageID: 97c6d23f8b8c74c6f338eb354b03a181b219a854b26158caac8277d37936d719
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:26:31Z"
    - containerID: cri-o://307ed8d43391fc151d51a63d60c5e44fbf36712ef9e0614e4db34f21ea276a3d
      image: registry.build03.ci.openshift.org/ci-op-2j285qtr/stable@sha256:7874f39d9146a86e3e71a3ea4a2a52b90bba5b70518f7523dcecb410cf52dad8
      imageID: a6775e22b81f188672352fdad67cb3c82a642f33844b1dc89476003a4c6a02d9
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-12-06T09:26:31Z"
    hostIP: 10.0.122.108
    phase: Running
    podIP: 10.131.0.3
    podIPs:
    - ip: 10.131.0.3
    qosClass: Burstable
    startTime: "2023-12-06T09:25:18Z"
kind: PodList
metadata:
  resourceVersion: "47848"
